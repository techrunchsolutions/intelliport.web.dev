{"version":3,"file":"validation.directive.d.ts","sources":["validation.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, Injector, OnDestroy, Renderer2, ViewContainerRef } from '@angular/core';\nimport { FormGroup, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { AbstractValidationDirective } from '../abstracts';\nimport { ValidationContainerDirective } from './validation-container.directive';\nimport { ValidationGroupDirective } from './validation-group.directive';\nimport { ValidationStyleDirective } from './validation-style.directive';\nimport { ValidationTargetDirective } from './validation-target.directive';\nexport declare class ValidationDirective extends AbstractValidationDirective implements AfterViewInit, OnDestroy {\n    injector: Injector;\n    private cdRef;\n    private cfRes;\n    private control;\n    private renderer;\n    private vcRef;\n    parentRef: ValidationGroupDirective;\n    private markRef;\n    targetRef: ValidationTargetDirective;\n    private containerRef;\n    private formGroupDirective;\n    private errorRef;\n    private markElement;\n    private isSubmitted;\n    readonly validation$: Observable<FormGroup>;\n    private subscriptions;\n    constructor(injector: Injector, cdRef: ChangeDetectorRef, cfRes: ComponentFactoryResolver, control: NgControl, renderer: Renderer2, vcRef: ViewContainerRef, parentRef: ValidationGroupDirective, markRef: ValidationStyleDirective, targetRef: ValidationTargetDirective, containerRef: ValidationContainerDirective, formGroupDirective: FormGroupDirective);\n    private buildErrors;\n    private insertErrorClasses;\n    private insertErrors;\n    private removeErrorClasses;\n    private removeErrors;\n    private setMarkElement;\n    private shouldValidate;\n    private subscribeToValidation;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}