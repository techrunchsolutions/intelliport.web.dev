import { AfterViewInit, ChangeDetectorRef, Injector, OnDestroy } from '@angular/core';
import { FormGroup, FormGroupDirective, FormGroupName } from '@angular/forms';
import { ReplaySubject } from 'rxjs';
import { AbstractValidationDirective } from '../abstracts';
import * as ɵngcc0 from '@angular/core';
export declare class ValidationGroupDirective extends AbstractValidationDirective implements AfterViewInit, OnDestroy {
    injector: Injector;
    cdRef: ChangeDetectorRef;
    groupName: FormGroupName;
    groupRef: FormGroupDirective;
    parentRef: ValidationGroupDirective;
    status$: ReplaySubject<FormGroup>;
    submit$: ReplaySubject<FormGroup>;
    value$: ReplaySubject<FormGroup>;
    private subs;
    constructor(injector: Injector, cdRef: ChangeDetectorRef, groupName: FormGroupName, groupRef: FormGroupDirective, parentRef: ValidationGroupDirective);
    private subscribeToFormSubmit;
    private subscribeToStatusChanges;
    private subscribeToValueChanges;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ValidationGroupDirective, [null, null, { optional: true; self: true; }, { optional: true; self: true; }, { optional: true; skipSelf: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<ValidationGroupDirective, "[formGroup],[formGroupName]", ["validationGroup"], {}, {}, never>;
}

//# sourceMappingURL=validation-group.directive.d.ts.map