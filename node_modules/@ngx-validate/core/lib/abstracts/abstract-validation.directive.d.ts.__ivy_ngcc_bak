import { ElementRef, Injector, OnDestroy, TemplateRef, Type } from '@angular/core';
import { FormGroup, FormGroupDirective, FormGroupName } from '@angular/forms';
import { Observable } from 'rxjs';
import { ValidationGroupDirective } from '../directives/validation-group.directive';
import { Validation } from '../models';
export declare class AbstractValidationDirective implements OnDestroy {
    injector: Injector;
    _blueprints: Validation.Blueprints;
    _errorTemplate: TemplateRef<any> | Type<any>;
    _invalidClasses: string;
    _mapErrorsFn: Validation.MapErrorsFn;
    _skipValidation: boolean;
    _targetSelector: string;
    _validateOnSubmit: boolean;
    readonly group: FormGroup;
    readonly parent: Partial<ValidationGroupDirective>;
    readonly blueprints: Validation.Blueprints;
    readonly errorTemplate: TemplateRef<any> | Type<any>;
    readonly invalidClasses: string;
    readonly mapErrorsFn: Validation.MapErrorsFn;
    readonly skipValidation: boolean;
    readonly targetSelector: string;
    readonly validateOnSubmit: boolean;
    config: Validation.Config;
    elRef: ElementRef;
    groupName: FormGroupName;
    groupRef: FormGroupDirective;
    parentRef: ValidationGroupDirective;
    constructor(injector: Injector);
    getStream(streamName: Validation.StreamName): Observable<FormGroup>;
    ngOnDestroy(): void;
}
