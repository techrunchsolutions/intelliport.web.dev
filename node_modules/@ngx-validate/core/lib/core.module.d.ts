import { ModuleWithProviders } from '@angular/core';
import { Validation } from './models/validation.model';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './components/validation-error.component';
import * as ɵngcc2 from './abstracts/abstract-validation.directive';
import * as ɵngcc3 from './directives/validation-container.directive';
import * as ɵngcc4 from './directives/validation-group.directive';
import * as ɵngcc5 from './directives/validation-style.directive';
import * as ɵngcc6 from './directives/validation-target.directive';
import * as ɵngcc7 from './directives/validation.directive';
import * as ɵngcc8 from '@angular/common';
import * as ɵngcc9 from '@angular/forms';
export declare class NgxValidateCoreModule {
    static forRoot(config?: Partial<{
        blueprints: Validation.Blueprints;
        errorTemplate: import("@angular/core").Type<any> | import("@angular/core").TemplateRef<any>;
        invalidClasses: string;
        mapErrorsFn: Validation.MapErrorsFn;
        skipValidation: boolean;
        targetSelector: string;
        validateOnSubmit: boolean;
    }>): ModuleWithProviders<NgxValidateCoreModule>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgxValidateCoreModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<NgxValidateCoreModule, [typeof ɵngcc1.ValidationErrorComponent, typeof ɵngcc2.AbstractValidationDirective, typeof ɵngcc3.ValidationContainerDirective, typeof ɵngcc4.ValidationGroupDirective, typeof ɵngcc5.ValidationStyleDirective, typeof ɵngcc6.ValidationTargetDirective, typeof ɵngcc7.ValidationDirective], [typeof ɵngcc8.CommonModule, typeof ɵngcc9.FormsModule, typeof ɵngcc9.ReactiveFormsModule], [typeof ɵngcc3.ValidationContainerDirective, typeof ɵngcc4.ValidationGroupDirective, typeof ɵngcc5.ValidationStyleDirective, typeof ɵngcc6.ValidationTargetDirective, typeof ɵngcc7.ValidationDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<NgxValidateCoreModule>;
}

//# sourceMappingURL=core.module.d.ts.map