/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/validation-error.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';
var ValidationErrorComponent = /** @class */ (function () {
    function ValidationErrorComponent() {
        this.trackByFn = (/**
         * @param {?} _
         * @param {?} item
         * @return {?}
         */
        function (_, item) { return item.key; });
    }
    Object.defineProperty(ValidationErrorComponent.prototype, "errors", {
        get: /**
         * @return {?}
         */
        function () {
            return this.validationErrors || [];
        },
        enumerable: true,
        configurable: true
    });
    ValidationErrorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'validation-error',
                    template: "\n    <div *ngFor=\"let error of errors; trackBy: trackByFn\" class=\"invalid-feedback\">{{ error.message }}</div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    return ValidationErrorComponent;
}());
export { ValidationErrorComponent };
if (false) {
    /** @type {?} */
    ValidationErrorComponent.prototype.validationErrors;
    /** @type {?} */
    ValidationErrorComponent.prototype.trackByFn;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGlvbi1lcnJvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LXZhbGlkYXRlL2NvcmUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy92YWxpZGF0aW9uLWVycm9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQW1CLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3ZHO0lBQUE7UUFXRSxjQUFTOzs7OztRQUFzQyxVQUFDLENBQUMsRUFBRSxJQUFJLElBQUssT0FBQSxJQUFJLENBQUMsR0FBRyxFQUFSLENBQVEsRUFBQztJQUt2RSxDQUFDO0lBSEMsc0JBQUksNENBQU07Ozs7UUFBVjtZQUNFLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixJQUFJLEVBQUUsQ0FBQztRQUNyQyxDQUFDOzs7T0FBQTs7Z0JBZkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFFBQVEsRUFBRSx3SEFFVDtvQkFDRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOztJQVNELCtCQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FSWSx3QkFBd0I7OztJQUNuQyxvREFBcUM7O0lBRXJDLDZDQUFxRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIFRyYWNrQnlGdW5jdGlvbiwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZhbGlkYXRpb24gfSBmcm9tICcuLi9tb2RlbHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd2YWxpZGF0aW9uLWVycm9yJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2ICpuZ0Zvcj1cImxldCBlcnJvciBvZiBlcnJvcnM7IHRyYWNrQnk6IHRyYWNrQnlGblwiIGNsYXNzPVwiaW52YWxpZC1mZWVkYmFja1wiPnt7IGVycm9yLm1lc3NhZ2UgfX08L2Rpdj5cbiAgYCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIFZhbGlkYXRpb25FcnJvckNvbXBvbmVudCB7XG4gIHZhbGlkYXRpb25FcnJvcnM6IFZhbGlkYXRpb24uRXJyb3JbXTtcblxuICB0cmFja0J5Rm46IFRyYWNrQnlGdW5jdGlvbjxWYWxpZGF0aW9uLkVycm9yPiA9IChfLCBpdGVtKSA9PiBpdGVtLmtleTtcblxuICBnZXQgZXJyb3JzKCk6IFZhbGlkYXRpb24uRXJyb3JbXSB7XG4gICAgcmV0dXJuIHRoaXMudmFsaWRhdGlvbkVycm9ycyB8fCBbXTtcbiAgfVxufVxuIl19