import * as i1 from '@abp/ng.core';
import { mapEnumToOptions } from '@abp/ng.core';
import * as i0 from '@angular/core';
import { Injectable } from '@angular/core';

var LoginResultType;
(function (LoginResultType) {
    LoginResultType[LoginResultType["Success"] = 1] = "Success";
    LoginResultType[LoginResultType["InvalidUserNameOrPassword"] = 2] = "InvalidUserNameOrPassword";
    LoginResultType[LoginResultType["NotAllowed"] = 3] = "NotAllowed";
    LoginResultType[LoginResultType["LockedOut"] = 4] = "LockedOut";
    LoginResultType[LoginResultType["RequiresTwoFactor"] = 5] = "RequiresTwoFactor";
})(LoginResultType || (LoginResultType = {}));
const loginResultTypeOptions = mapEnumToOptions(LoginResultType);

var index$4 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    get LoginResultType () { return LoginResultType; },
    loginResultTypeOptions: loginResultTypeOptions
});

class AccountService$1 {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'AbpAccount';
        this.checkPasswordByLogin = (login) => this.restService.request({
            method: 'POST',
            url: '/api/account/check-password',
            body: login,
        }, { apiName: this.apiName });
        this.loginByLogin = (login) => this.restService.request({
            method: 'POST',
            url: '/api/account/login',
            body: login,
        }, { apiName: this.apiName });
        this.logout = () => this.restService.request({
            method: 'GET',
            url: '/api/account/logout',
        }, { apiName: this.apiName });
    }
}
AccountService$1.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: AccountService$1, deps: [{ token: i1.RestService }], target: i0.ɵɵFactoryTarget.Injectable });
AccountService$1.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: AccountService$1, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: AccountService$1, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.RestService }]; } });

var index$3 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Models: index$4,
    AccountService: AccountService$1
});

var index$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Controllers: index$3
});

var index$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Account: index$2
});

var index = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Areas: index$1
});

class AccountService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'AbpAccount';
        this.register = (input) => this.restService.request({
            method: 'POST',
            url: '/api/account/register',
            body: input,
        }, { apiName: this.apiName });
        this.resetPassword = (input) => this.restService.request({
            method: 'POST',
            url: '/api/account/reset-password',
            body: input,
        }, { apiName: this.apiName });
        this.sendPasswordResetCode = (input) => this.restService.request({
            method: 'POST',
            url: '/api/account/send-password-reset-code',
            body: input,
        }, { apiName: this.apiName });
    }
}
AccountService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: AccountService, deps: [{ token: i1.RestService }], target: i0.ɵɵFactoryTarget.Injectable });
AccountService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: AccountService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: AccountService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.RestService }]; } });

class ProfileService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'AbpAccount';
        this.changePassword = (input) => this.restService.request({
            method: 'POST',
            url: '/api/account/my-profile/change-password',
            body: input,
        }, { apiName: this.apiName });
        this.get = () => this.restService.request({
            method: 'GET',
            url: '/api/account/my-profile',
        }, { apiName: this.apiName });
        this.update = (input) => this.restService.request({
            method: 'PUT',
            url: '/api/account/my-profile',
            body: input,
        }, { apiName: this.apiName });
    }
}
ProfileService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ProfileService, deps: [{ token: i1.RestService }], target: i0.ɵɵFactoryTarget.Injectable });
ProfileService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ProfileService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ProfileService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.RestService }]; } });

/**
 * Generated bundle index. Do not edit.
 */

export { AccountService, ProfileService, index as Web };
//# sourceMappingURL=abp-ng.account.core-proxy.mjs.map
