import type { OnDestroy } from '@angular/core';
import { Subscription } from 'rxjs';
import type { Observable, PartialObserver } from 'rxjs';
import * as i0 from "@angular/core";
export declare class SubscriptionService implements OnDestroy {
    private subscription;
    get isClosed(): boolean;
    addOne<T>(source$: Observable<T>, next?: (value: T) => void, error?: (error: any) => void): Subscription;
    addOne<T>(source$: Observable<T>, observer?: PartialObserver<T>): Subscription;
    closeAll(): void;
    closeOne(subscription: Subscription | undefined | null): void;
    ngOnDestroy(): void;
    removeOne(subscription: Subscription | undefined | null): void;
    reset(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SubscriptionService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SubscriptionService>;
}
