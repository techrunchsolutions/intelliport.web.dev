import { HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { OAuthService } from 'angular-oauth2-oidc';
import { SessionStateService } from '../services/session-state.service';
import { HttpWaitService } from '../services/http-wait.service';
import * as i0 from "@angular/core";
export declare class ApiInterceptor implements HttpInterceptor {
    private oAuthService;
    private sessionState;
    private httpWaitService;
    private tenantKey;
    constructor(oAuthService: OAuthService, sessionState: SessionStateService, httpWaitService: HttpWaitService, tenantKey: string);
    intercept(request: HttpRequest<any>, next: HttpHandler): import("rxjs").Observable<import("@angular/common/http").HttpEvent<any>>;
    getAdditionalHeaders(existingHeaders?: HttpHeaders): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<ApiInterceptor, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ApiInterceptor>;
}
