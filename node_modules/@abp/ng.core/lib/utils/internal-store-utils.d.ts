import { DeepPartial } from '../models';
export declare class InternalStore<State> {
    private initialState;
    private state$;
    private update$;
    get state(): State;
    sliceState: <Slice>(selector: (state: State) => Slice, compareFn?: (s1: Slice, s2: Slice) => boolean) => import("rxjs").Observable<Slice>;
    sliceUpdate: <Slice>(selector: (state: DeepPartial<State>) => Slice, filterFn?: (x: Slice) => boolean) => import("rxjs").Observable<Slice>;
    constructor(initialState: State);
    patch(state: Partial<State>): void;
    deepPatch(state: DeepPartial<State>): void;
    set(state: State): void;
    reset(): void;
}
