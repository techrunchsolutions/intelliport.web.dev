import { ChangeDetectorRef, OnChanges, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';
import { Subscription } from 'rxjs';
import { PermissionService } from '../services/permission.service';
import * as i0 from "@angular/core";
export declare class PermissionDirective implements OnDestroy, OnChanges {
    private templateRef;
    private vcRef;
    private permissionService;
    private cdRef;
    condition: string | undefined;
    runChangeDetection: boolean;
    subscription: Subscription;
    constructor(templateRef: TemplateRef<any>, vcRef: ViewContainerRef, permissionService: PermissionService, cdRef: ChangeDetectorRef);
    private check;
    ngOnDestroy(): void;
    ngOnChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PermissionDirective, [{ optional: true; }, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PermissionDirective, "[abpPermission]", never, { "condition": "abpPermission"; "runChangeDetection": "abpPermissionRunChangeDetection"; }, {}, never>;
}
