{"version":3,"file":"abp-ng.core-locale.mjs","sources":["../../../../packages/core/locale/src/utils/register-locale.ts","../../../../packages/core/locale/src/abp-ng.core-locale.ts"],"sourcesContent":["import { differentLocales } from '@abp/ng.core';\r\nimport { isDevMode } from '@angular/core';\r\n\r\nexport interface LocaleErrorHandlerData {\r\n  resolve: any;\r\n  reject: any;\r\n  error: any;\r\n  locale: string;\r\n}\r\n\r\nlet localeMap = {};\r\n\r\nexport interface RegisterLocaleData {\r\n  cultureNameLocaleFileMap?: Record<string, string>;\r\n  errorHandlerFn?: (data: LocaleErrorHandlerData) => any;\r\n}\r\n\r\nexport function registerLocale(\r\n  {\r\n    cultureNameLocaleFileMap = {},\r\n    errorHandlerFn = defaultLocalErrorHandlerFn,\r\n  } = {} as RegisterLocaleData,\r\n) {\r\n  return (locale: string): Promise<any> => {\r\n    localeMap = { ...differentLocales, ...cultureNameLocaleFileMap };\r\n    const localePath = `/locales/${localeMap[locale] || locale}`;\r\n    return new Promise((resolve, reject) => {\r\n      return import(\r\n        /* webpackMode: \"lazy-once\" */\r\n        /* webpackChunkName: \"locales\"*/\r\n        /* webpackInclude: /[/\\\\](ar|cs|en|en-GB|es|de|fi|fr|hi|hu|is|it|pt|tr|ru|ro|sk|sl|zh-Hans|zh-Hant)\\.(mjs|js)$/ */\r\n        /* webpackExclude: /[/\\\\]global|extra/ */\r\n        `@angular/common${localePath}`\r\n      )\r\n        .then(val => {\r\n          let module = val;\r\n          while (module.default) {\r\n            module = module.default;\r\n          }\r\n          resolve({ default: module });\r\n        })\r\n        .catch(error => {\r\n          errorHandlerFn({\r\n            resolve,\r\n            reject,\r\n            error,\r\n            locale,\r\n          });\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nconst extraLocales = {};\r\nexport function storeLocaleData(data: any, localeId: string) {\r\n  extraLocales[localeId] = data;\r\n}\r\n\r\nexport async function defaultLocalErrorHandlerFn({ locale, resolve }: LocaleErrorHandlerData) {\r\n  if (extraLocales[locale]) {\r\n    resolve({ default: extraLocales[localeMap[locale] || locale] });\r\n    return;\r\n  }\r\n\r\n  if (isDevMode) {\r\n    console.error(\r\n      `Cannot find the ${locale} locale file. You can check how can add new culture at https://docs.abp.io/en/abp/latest/UI/Angular/Localization#adding-a-new-culture`,\r\n    );\r\n  }\r\n\r\n  resolve();\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;AAUA,IAAI,SAAS,GAAG,EAAE,CAAC;AAOH,SAAA,cAAc,CAC5B,EACE,wBAAwB,GAAG,EAAE,EAC7B,cAAc,GAAG,0BAA0B,GAAA,GACzC,EAAwB,EAAA;IAE5B,OAAO,CAAC,MAAc,KAAkB;QACtC,SAAS,GAAG,EAAE,GAAG,gBAAgB,EAAE,GAAG,wBAAwB,EAAE,CAAC;QACjE,MAAM,UAAU,GAAG,CAAA,SAAA,EAAY,SAAS,CAAC,MAAM,CAAC,IAAI,MAAM,CAAA,CAAE,CAAC;QAC7D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,YAAA,OAAO;;;;;YAKL,CAAkB,eAAA,EAAA,UAAU,EAAE,CAC/B;iBACE,IAAI,CAAC,GAAG,IAAG;gBACV,IAAI,MAAM,GAAG,GAAG,CAAC;gBACjB,OAAO,MAAM,CAAC,OAAO,EAAE;AACrB,oBAAA,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;AACzB,iBAAA;AACD,gBAAA,OAAO,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;AAC/B,aAAC,CAAC;iBACD,KAAK,CAAC,KAAK,IAAG;AACb,gBAAA,cAAc,CAAC;oBACb,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,MAAM;AACP,iBAAA,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;AACL,KAAC,CAAC;AACJ,CAAC;AAED,MAAM,YAAY,GAAG,EAAE,CAAC;AACR,SAAA,eAAe,CAAC,IAAS,EAAE,QAAgB,EAAA;AACzD,IAAA,YAAY,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;AAChC,CAAC;AAEM,eAAe,0BAA0B,CAAC,EAAE,MAAM,EAAE,OAAO,EAA0B,EAAA;AAC1F,IAAA,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE;AACxB,QAAA,OAAO,CAAC,EAAE,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;QAChE,OAAO;AACR,KAAA;AAED,IAAA,IAAI,SAAS,EAAE;AACb,QAAA,OAAO,CAAC,KAAK,CACX,mBAAmB,MAAM,CAAA,qIAAA,CAAuI,CACjK,CAAC;AACH,KAAA;AAED,IAAA,OAAO,EAAE,CAAC;AACZ;;ACvEA;;AAEG;;;;"}