import { DatePipe, DATE_PIPE_DEFAULT_TIMEZONE } from '@angular/common';
import { Inject, LOCALE_ID, Optional, Pipe } from '@angular/core';
import { ConfigStateService } from '../services';
import { getShortDateShortTimeFormat } from '../utils/date-utils';
import * as i0 from "@angular/core";
import * as i1 from "../services";
export class ShortDateTimePipe extends DatePipe {
    constructor(configStateService, locale, defaultTimezone) {
        super(locale, defaultTimezone);
        this.configStateService = configStateService;
    }
    transform(value, timezone, locale) {
        const format = getShortDateShortTimeFormat(this.configStateService);
        return super.transform(value, format, timezone, locale);
    }
}
ShortDateTimePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ShortDateTimePipe, deps: [{ token: i1.ConfigStateService }, { token: LOCALE_ID }, { token: DATE_PIPE_DEFAULT_TIMEZONE, optional: true }], target: i0.ɵɵFactoryTarget.Pipe });
ShortDateTimePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ShortDateTimePipe, name: "shortDateTime" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ShortDateTimePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'shortDateTime',
                    pure: true,
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigStateService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [LOCALE_ID]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DATE_PIPE_DEFAULT_TIMEZONE]
                }, {
                    type: Optional
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvcnQtZGF0ZS10aW1lLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvcGlwZXMvc2hvcnQtZGF0ZS10aW1lLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNqRCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7O0FBTWxFLE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxRQUFRO0lBRTdDLFlBQW9CLGtCQUFzQyxFQUNyQyxNQUFjLEVBQ2dCLGVBQTZCO1FBRTlFLEtBQUssQ0FBQyxNQUFNLEVBQUUsZUFBZSxDQUFDLENBQUE7UUFKWix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0lBSzFELENBQUM7SUFJRCxTQUFTLENBQ1AsS0FBd0MsRUFBRSxRQUFpQixFQUMzRCxNQUFlO1FBRWpCLE1BQU0sTUFBTSxHQUFHLDJCQUEyQixDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3BFLE9BQU8sS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxNQUFNLENBQUMsQ0FBQTtJQUNwRCxDQUFDOzs4R0FqQlUsaUJBQWlCLG9EQUdsQixTQUFTLGFBQ1QsMEJBQTBCOzRHQUp6QixpQkFBaUI7MkZBQWpCLGlCQUFpQjtrQkFKN0IsSUFBSTttQkFBQztvQkFDSixJQUFJLEVBQUUsZUFBZTtvQkFDckIsSUFBSSxFQUFFLElBQUk7aUJBQ1g7OzBCQUlJLE1BQU07MkJBQUMsU0FBUzs7MEJBQ2hCLE1BQU07MkJBQUMsMEJBQTBCOzswQkFBRyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0ZVBpcGUsIERBVEVfUElQRV9ERUZBVUxUX1RJTUVaT05FIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSW5qZWN0LCBMT0NBTEVfSUQsIE9wdGlvbmFsLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbmZpZ1N0YXRlU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzJztcclxuaW1wb3J0IHsgZ2V0U2hvcnREYXRlU2hvcnRUaW1lRm9ybWF0IH0gZnJvbSAnLi4vdXRpbHMvZGF0ZS11dGlscyc7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ3Nob3J0RGF0ZVRpbWUnLFxyXG4gIHB1cmU6IHRydWUsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaG9ydERhdGVUaW1lUGlwZSBleHRlbmRzIERhdGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29uZmlnU3RhdGVTZXJ2aWNlOiBDb25maWdTdGF0ZVNlcnZpY2UsXHJcbiAgICBASW5qZWN0KExPQ0FMRV9JRCkgbG9jYWxlOiBzdHJpbmcsXHJcbiAgICBASW5qZWN0KERBVEVfUElQRV9ERUZBVUxUX1RJTUVaT05FKSBAT3B0aW9uYWwoKSAgZGVmYXVsdFRpbWV6b25lPzogc3RyaW5nfG51bGxcclxuICAgICkge1xyXG4gICAgc3VwZXIobG9jYWxlLCBkZWZhdWx0VGltZXpvbmUpXHJcbiAgfVxyXG5cclxuICB0cmFuc2Zvcm0odmFsdWU6IERhdGUgfCBzdHJpbmcgfCBudW1iZXIsIGZvcm1hdD86IHN0cmluZywgdGltZXpvbmU/OiBzdHJpbmcsIGxvY2FsZT86IHN0cmluZyk6IHN0cmluZyB8IG51bGw7XHJcbiAgdHJhbnNmb3JtKHZhbHVlOiBudWxsIHwgdW5kZWZpbmVkLCBmb3JtYXQ/OiBzdHJpbmcsIHRpbWV6b25lPzogc3RyaW5nLCBsb2NhbGU/OiBzdHJpbmcpOiBudWxsO1xyXG4gIHRyYW5zZm9ybShcclxuICAgIHZhbHVlOiBzdHJpbmd8bnVtYmVyfERhdGV8bnVsbHx1bmRlZmluZWQsIHRpbWV6b25lPzogc3RyaW5nLFxyXG4gICAgbG9jYWxlPzogc3RyaW5nKTogc3RyaW5nfG51bGwge1xyXG5cclxuICBjb25zdCBmb3JtYXQgPSBnZXRTaG9ydERhdGVTaG9ydFRpbWVGb3JtYXQodGhpcy5jb25maWdTdGF0ZVNlcnZpY2UpO1xyXG4gIHJldHVybiBzdXBlci50cmFuc2Zvcm0odmFsdWUsZm9ybWF0LHRpbWV6b25lLGxvY2FsZSlcclxuICB9XHJcblxyXG5cclxufVxyXG5cclxuXHJcbiJdfQ==