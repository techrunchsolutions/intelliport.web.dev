import { InjectionToken, Injector, Pipe } from '@angular/core';
import * as i0 from "@angular/core";
export const INJECTOR_PIPE_DATA_TOKEN = new InjectionToken('INJECTOR_PIPE_DATA_TOKEN');
export class ToInjectorPipe {
    constructor(injector) {
        this.injector = injector;
    }
    transform(value, token = INJECTOR_PIPE_DATA_TOKEN, name = 'ToInjectorPipe') {
        return Injector.create({
            providers: [
                {
                    provide: token,
                    useValue: value,
                },
            ],
            parent: this.injector,
            name,
        });
    }
}
ToInjectorPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ToInjectorPipe, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Pipe });
ToInjectorPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ToInjectorPipe, name: "toInjector" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: ToInjectorPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'toInjector',
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG8taW5qZWN0b3IucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9waXBlcy90by1pbmplY3Rvci5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7O0FBRTlFLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLElBQUksY0FBYyxDQUN4RCwwQkFBMEIsQ0FDM0IsQ0FBQztBQUtGLE1BQU0sT0FBTyxjQUFjO0lBQ3pCLFlBQW9CLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7SUFBRyxDQUFDO0lBQzFDLFNBQVMsQ0FDUCxLQUFVLEVBQ1YsUUFBNkIsd0JBQXdCLEVBQ3JELElBQUksR0FBRyxnQkFBZ0I7UUFFdkIsT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDO1lBQ3JCLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsS0FBSztvQkFDZCxRQUFRLEVBQUUsS0FBSztpQkFDaEI7YUFDRjtZQUNELE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUTtZQUNyQixJQUFJO1NBQ0wsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7MkdBakJVLGNBQWM7eUdBQWQsY0FBYzsyRkFBZCxjQUFjO2tCQUgxQixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxZQUFZO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuLCBJbmplY3RvciwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IElOSkVDVE9SX1BJUEVfREFUQV9UT0tFTiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxQaXBlVHJhbnNmb3JtPihcclxuICAnSU5KRUNUT1JfUElQRV9EQVRBX1RPS0VOJyxcclxuKTtcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAndG9JbmplY3RvcicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUb0luamVjdG9yUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7fVxyXG4gIHRyYW5zZm9ybShcclxuICAgIHZhbHVlOiBhbnksXHJcbiAgICB0b2tlbjogSW5qZWN0aW9uVG9rZW48YW55PiA9IElOSkVDVE9SX1BJUEVfREFUQV9UT0tFTixcclxuICAgIG5hbWUgPSAnVG9JbmplY3RvclBpcGUnLFxyXG4gICk6IEluamVjdG9yIHtcclxuICAgIHJldHVybiBJbmplY3Rvci5jcmVhdGUoe1xyXG4gICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICBwcm92aWRlOiB0b2tlbixcclxuICAgICAgICAgIHVzZVZhbHVlOiB2YWx1ZSxcclxuICAgICAgICB9LFxyXG4gICAgICBdLFxyXG4gICAgICBwYXJlbnQ6IHRoaXMuaW5qZWN0b3IsXHJcbiAgICAgIG5hbWUsXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl19