import { SettingTabsService } from '@abp/ng.setting-management/config';
import { Component } from '@angular/core';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@abp/ng.setting-management/config";
import * as i2 from "@abp/ng.components/page";
import * as i3 from "@abp/ng.core";
import * as i4 from "@angular/common";
export class SettingManagementComponent {
    constructor(settingTabsService) {
        this.settingTabsService = settingTabsService;
        this.subscription = new Subscription();
        this.settings = [];
        this.trackByFn = (_, item) => item.name;
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    ngOnInit() {
        this.subscription.add(this.settingTabsService.visible$.subscribe(settings => {
            this.settings = settings;
            if (!this.selected)
                this.selected = this.settings[0];
        }));
    }
}
SettingManagementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: SettingManagementComponent, deps: [{ token: i1.SettingTabsService }], target: i0.ɵɵFactoryTarget.Component });
SettingManagementComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.6", type: SettingManagementComponent, selector: "abp-setting-management", ngImport: i0, template: "<abp-page [title]=\"'AbpSettingManagement::Settings' | abpLocalization\">\r\n  <div id=\"SettingManagementWrapper\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\r\n            <ul class=\"nav flex-column nav-pills\" id=\"nav-tab\" role=\"tablist\">\r\n              <ng-container *abpFor=\"let setting of settings; trackBy: trackByFn\">\r\n                <li\r\n                  (click)=\"selected = setting\"\r\n                  class=\"nav-item pointer\"\r\n                  *abpPermission=\"setting.requiredPolicy\"\r\n                >\r\n                  <a\r\n                    class=\"nav-link\"\r\n                    [id]=\"setting.name + '-tab'\"\r\n                    role=\"tab\"\r\n                    [class.active]=\"setting.name === selected.name\"\r\n                    >{{ setting.name | abpLocalization }}</a\r\n                  >\r\n                </li>\r\n              </ng-container>\r\n            </ul>\r\n          </div>\r\n          <div class=\"col-12 col-md-9\">\r\n            <div *ngIf=\"settings.length\" class=\"tab-content\">\r\n              <div class=\"tab-pane fade show active\" [id]=\"selected.name + '-tab'\" role=\"tabpanel\">\r\n                <ng-container *ngComponentOutlet=\"selected.component\"></ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</abp-page>\r\n", components: [{ type: i2.PageComponent, selector: "abp-page", inputs: ["title", "toolbar", "breadcrumb"] }], directives: [{ type: i3.ForDirective, selector: "[abpFor]", inputs: ["abpForOf", "abpForOrderBy", "abpForOrderDir", "abpForFilterBy", "abpForFilterVal", "abpForTrackBy", "abpForCompareBy", "abpForEmptyRef"] }, { type: i3.PermissionDirective, selector: "[abpPermission]", inputs: ["abpPermission", "abpPermissionRunChangeDetection"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgComponentOutlet, selector: "[ngComponentOutlet]", inputs: ["ngComponentOutlet", "ngComponentOutletInjector", "ngComponentOutletContent", "ngComponentOutletNgModuleFactory"] }], pipes: { "abpLocalization": i3.LocalizationPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: SettingManagementComponent, decorators: [{
            type: Component,
            args: [{ selector: 'abp-setting-management', template: "<abp-page [title]=\"'AbpSettingManagement::Settings' | abpLocalization\">\r\n  <div id=\"SettingManagementWrapper\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-md-3 mb-2 mb-md-0\">\r\n            <ul class=\"nav flex-column nav-pills\" id=\"nav-tab\" role=\"tablist\">\r\n              <ng-container *abpFor=\"let setting of settings; trackBy: trackByFn\">\r\n                <li\r\n                  (click)=\"selected = setting\"\r\n                  class=\"nav-item pointer\"\r\n                  *abpPermission=\"setting.requiredPolicy\"\r\n                >\r\n                  <a\r\n                    class=\"nav-link\"\r\n                    [id]=\"setting.name + '-tab'\"\r\n                    role=\"tab\"\r\n                    [class.active]=\"setting.name === selected.name\"\r\n                    >{{ setting.name | abpLocalization }}</a\r\n                  >\r\n                </li>\r\n              </ng-container>\r\n            </ul>\r\n          </div>\r\n          <div class=\"col-12 col-md-9\">\r\n            <div *ngIf=\"settings.length\" class=\"tab-content\">\r\n              <div class=\"tab-pane fade show active\" [id]=\"selected.name + '-tab'\" role=\"tabpanel\">\r\n                <ng-container *ngComponentOutlet=\"selected.component\"></ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</abp-page>\r\n" }]
        }], ctorParameters: function () { return [{ type: i1.SettingTabsService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZy1tYW5hZ2VtZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3NldHRpbmctbWFuYWdlbWVudC9zcmMvbGliL2NvbXBvbmVudHMvc2V0dGluZy1tYW5hZ2VtZW50LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3NldHRpbmctbWFuYWdlbWVudC9zcmMvbGliL2NvbXBvbmVudHMvc2V0dGluZy1tYW5hZ2VtZW50LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxTQUFTLEVBQXNDLE1BQU0sZUFBZSxDQUFDO0FBQzlFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7OztBQU1wQyxNQUFNLE9BQU8sMEJBQTBCO0lBUXJDLFlBQW9CLGtCQUFzQztRQUF0Qyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBUGxELGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMxQyxhQUFRLEdBQWMsRUFBRSxDQUFDO1FBSXpCLGNBQVMsR0FBNkIsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBRUEsQ0FBQztJQUU5RCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUNuQixJQUFJLENBQUMsa0JBQWtCLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUNwRCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUV6QixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVE7Z0JBQUUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZELENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDOzt1SEF0QlUsMEJBQTBCOzJHQUExQiwwQkFBMEIsOERDVHZDLHUvQ0FvQ0E7MkZEM0JhLDBCQUEwQjtrQkFKdEMsU0FBUzsrQkFDRSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBQlAgfSBmcm9tICdAYWJwL25nLmNvcmUnO1xyXG5pbXBvcnQgeyBTZXR0aW5nVGFic1NlcnZpY2UgfSBmcm9tICdAYWJwL25nLnNldHRpbmctbWFuYWdlbWVudC9jb25maWcnO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBUcmFja0J5RnVuY3Rpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FicC1zZXR0aW5nLW1hbmFnZW1lbnQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zZXR0aW5nLW1hbmFnZW1lbnQuY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2V0dGluZ01hbmFnZW1lbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XHJcbiAgcHJpdmF0ZSBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCk7XHJcbiAgc2V0dGluZ3M6IEFCUC5UYWJbXSA9IFtdO1xyXG5cclxuICBzZWxlY3RlZCE6IEFCUC5UYWI7XHJcblxyXG4gIHRyYWNrQnlGbjogVHJhY2tCeUZ1bmN0aW9uPEFCUC5UYWI+ID0gKF8sIGl0ZW0pID0+IGl0ZW0ubmFtZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzZXR0aW5nVGFic1NlcnZpY2U6IFNldHRpbmdUYWJzU2VydmljZSkge31cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLnN1YnNjcmlwdGlvbi5hZGQoXHJcbiAgICAgIHRoaXMuc2V0dGluZ1RhYnNTZXJ2aWNlLnZpc2libGUkLnN1YnNjcmliZShzZXR0aW5ncyA9PiB7XHJcbiAgICAgICAgdGhpcy5zZXR0aW5ncyA9IHNldHRpbmdzO1xyXG5cclxuICAgICAgICBpZiAoIXRoaXMuc2VsZWN0ZWQpIHRoaXMuc2VsZWN0ZWQgPSB0aGlzLnNldHRpbmdzWzBdO1xyXG4gICAgICB9KSxcclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiIsIjxhYnAtcGFnZSBbdGl0bGVdPVwiJ0FicFNldHRpbmdNYW5hZ2VtZW50OjpTZXR0aW5ncycgfCBhYnBMb2NhbGl6YXRpb25cIj5cclxuICA8ZGl2IGlkPVwiU2V0dGluZ01hbmFnZW1lbnRXcmFwcGVyXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC0xMiBjb2wtbWQtMyBtYi0yIG1iLW1kLTBcIj5cclxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibmF2IGZsZXgtY29sdW1uIG5hdi1waWxsc1wiIGlkPVwibmF2LXRhYlwiIHJvbGU9XCJ0YWJsaXN0XCI+XHJcbiAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqYWJwRm9yPVwibGV0IHNldHRpbmcgb2Ygc2V0dGluZ3M7IHRyYWNrQnk6IHRyYWNrQnlGblwiPlxyXG4gICAgICAgICAgICAgICAgPGxpXHJcbiAgICAgICAgICAgICAgICAgIChjbGljayk9XCJzZWxlY3RlZCA9IHNldHRpbmdcIlxyXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cIm5hdi1pdGVtIHBvaW50ZXJcIlxyXG4gICAgICAgICAgICAgICAgICAqYWJwUGVybWlzc2lvbj1cInNldHRpbmcucmVxdWlyZWRQb2xpY3lcIlxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICA8YVxyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwibmF2LWxpbmtcIlxyXG4gICAgICAgICAgICAgICAgICAgIFtpZF09XCJzZXR0aW5nLm5hbWUgKyAnLXRhYidcIlxyXG4gICAgICAgICAgICAgICAgICAgIHJvbGU9XCJ0YWJcIlxyXG4gICAgICAgICAgICAgICAgICAgIFtjbGFzcy5hY3RpdmVdPVwic2V0dGluZy5uYW1lID09PSBzZWxlY3RlZC5uYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICA+e3sgc2V0dGluZy5uYW1lIHwgYWJwTG9jYWxpemF0aW9uIH19PC9hXHJcbiAgICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTIgY29sLW1kLTlcIj5cclxuICAgICAgICAgICAgPGRpdiAqbmdJZj1cInNldHRpbmdzLmxlbmd0aFwiIGNsYXNzPVwidGFiLWNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGFiLXBhbmUgZmFkZSBzaG93IGFjdGl2ZVwiIFtpZF09XCJzZWxlY3RlZC5uYW1lICsgJy10YWInXCIgcm9sZT1cInRhYnBhbmVsXCI+XHJcbiAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0NvbXBvbmVudE91dGxldD1cInNlbGVjdGVkLmNvbXBvbmVudFwiPjwvbmctY29udGFpbmVyPlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG48L2FicC1wYWdlPlxyXG4iXX0=