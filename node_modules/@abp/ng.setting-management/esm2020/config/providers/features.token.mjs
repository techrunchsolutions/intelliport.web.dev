import { ConfigStateService, featuresFactory, noop } from '@abp/ng.core';
import { APP_INITIALIZER, inject, InjectionToken } from '@angular/core';
import { map } from 'rxjs/operators';
export const SETTING_MANAGEMENT_FEATURES = new InjectionToken('SETTING_MANAGEMENT_FEATURES', {
    providedIn: 'root',
    factory: () => {
        const configState = inject(ConfigStateService);
        const featureKey = 'SettingManagement.Enable';
        const mapFn = (features) => ({
            enable: features[featureKey].toLowerCase() !== 'false',
        });
        return featuresFactory(configState, [featureKey], mapFn);
    },
});
export const SETTING_MANAGEMENT_ROUTE_VISIBILITY = new InjectionToken('SETTING_MANAGEMENT_ROUTE_VISIBILITY', {
    providedIn: 'root',
    factory: () => {
        const stream = inject(SETTING_MANAGEMENT_FEATURES);
        return stream.pipe(map(features => features.enable));
    },
});
export const SETTING_MANAGEMENT_FEATURES_PROVIDERS = [
    {
        provide: APP_INITIALIZER,
        useFactory: noop,
        deps: [SETTING_MANAGEMENT_ROUTE_VISIBILITY],
        multi: true,
    },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZXMudG9rZW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9zZXR0aW5nLW1hbmFnZW1lbnQvY29uZmlnL3NyYy9wcm92aWRlcnMvZmVhdHVyZXMudG9rZW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDekUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyQyxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyxJQUFJLGNBQWMsQ0FDM0QsNkJBQTZCLEVBQzdCO0lBQ0UsVUFBVSxFQUFFLE1BQU07SUFDbEIsT0FBTyxFQUFFLEdBQUcsRUFBRTtRQUNaLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQy9DLE1BQU0sVUFBVSxHQUFHLDBCQUEwQixDQUFDO1FBQzlDLE1BQU0sS0FBSyxHQUFHLENBQUMsUUFBZ0MsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNuRCxNQUFNLEVBQUUsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxLQUFLLE9BQU87U0FDdkQsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxlQUFlLENBQUMsV0FBVyxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDM0QsQ0FBQztDQUNGLENBQ0YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG1DQUFtQyxHQUFHLElBQUksY0FBYyxDQUNuRSxxQ0FBcUMsRUFDckM7SUFDRSxVQUFVLEVBQUUsTUFBTTtJQUNsQixPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ1osTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLDJCQUEyQixDQUFDLENBQUM7UUFDbkQsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7Q0FDRixDQUNGLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxxQ0FBcUMsR0FBRztJQUNuRDtRQUNFLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLElBQUksRUFBRSxDQUFDLG1DQUFtQyxDQUFDO1FBQzNDLEtBQUssRUFBRSxJQUFJO0tBQ1o7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uZmlnU3RhdGVTZXJ2aWNlLCBmZWF0dXJlc0ZhY3RvcnksIG5vb3AgfSBmcm9tICdAYWJwL25nLmNvcmUnO1xyXG5pbXBvcnQgeyBBUFBfSU5JVElBTElaRVIsIGluamVjdCwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5leHBvcnQgY29uc3QgU0VUVElOR19NQU5BR0VNRU5UX0ZFQVRVUkVTID0gbmV3IEluamVjdGlvblRva2VuPE9ic2VydmFibGU8eyBlbmFibGU6IGJvb2xlYW4gfT4+KFxyXG4gICdTRVRUSU5HX01BTkFHRU1FTlRfRkVBVFVSRVMnLFxyXG4gIHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290JyxcclxuICAgIGZhY3Rvcnk6ICgpID0+IHtcclxuICAgICAgY29uc3QgY29uZmlnU3RhdGUgPSBpbmplY3QoQ29uZmlnU3RhdGVTZXJ2aWNlKTtcclxuICAgICAgY29uc3QgZmVhdHVyZUtleSA9ICdTZXR0aW5nTWFuYWdlbWVudC5FbmFibGUnO1xyXG4gICAgICBjb25zdCBtYXBGbiA9IChmZWF0dXJlczogUmVjb3JkPHN0cmluZywgc3RyaW5nPikgPT4gKHtcclxuICAgICAgICBlbmFibGU6IGZlYXR1cmVzW2ZlYXR1cmVLZXldLnRvTG93ZXJDYXNlKCkgIT09ICdmYWxzZScsXHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm4gZmVhdHVyZXNGYWN0b3J5KGNvbmZpZ1N0YXRlLCBbZmVhdHVyZUtleV0sIG1hcEZuKTtcclxuICAgIH0sXHJcbiAgfSxcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBTRVRUSU5HX01BTkFHRU1FTlRfUk9VVEVfVklTSUJJTElUWSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxPYnNlcnZhYmxlPGJvb2xlYW4+PihcclxuICAnU0VUVElOR19NQU5BR0VNRU5UX1JPVVRFX1ZJU0lCSUxJVFknLFxyXG4gIHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290JyxcclxuICAgIGZhY3Rvcnk6ICgpID0+IHtcclxuICAgICAgY29uc3Qgc3RyZWFtID0gaW5qZWN0KFNFVFRJTkdfTUFOQUdFTUVOVF9GRUFUVVJFUyk7XHJcbiAgICAgIHJldHVybiBzdHJlYW0ucGlwZShtYXAoZmVhdHVyZXMgPT4gZmVhdHVyZXMuZW5hYmxlKSk7XHJcbiAgICB9LFxyXG4gIH0sXHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgU0VUVElOR19NQU5BR0VNRU5UX0ZFQVRVUkVTX1BST1ZJREVSUyA9IFtcclxuICB7XHJcbiAgICBwcm92aWRlOiBBUFBfSU5JVElBTElaRVIsXHJcbiAgICB1c2VGYWN0b3J5OiBub29wLFxyXG4gICAgZGVwczogW1NFVFRJTkdfTUFOQUdFTUVOVF9ST1VURV9WSVNJQklMSVRZXSxcclxuICAgIG11bHRpOiB0cnVlLFxyXG4gIH0sXHJcbl07XHJcbiJdfQ==