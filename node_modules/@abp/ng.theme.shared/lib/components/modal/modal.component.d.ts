import { SubscriptionService } from '@abp/ng.core';
import { EventEmitter, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { NgbModal, NgbModalOptions, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';
import { Subject } from 'rxjs';
import { ConfirmationService } from '../../services/confirmation.service';
import { ButtonComponent } from '../button/button.component';
import { DismissableModal, ModalDismissMode, ModalRefService } from './modal-ref.service';
import * as i0 from "@angular/core";
export declare type ModalSize = 'sm' | 'md' | 'lg' | 'xl';
export declare class ModalComponent implements OnInit, OnDestroy, DismissableModal {
    private confirmationService;
    private subscription;
    private suppressUnsavedChangesWarningToken;
    private modal;
    private modalRefService;
    get visible(): boolean;
    set visible(value: boolean);
    get busy(): boolean;
    set busy(value: boolean);
    options: NgbModalOptions;
    suppressUnsavedChangesWarning: boolean;
    modalContent?: TemplateRef<any>;
    abpHeader?: TemplateRef<any>;
    abpBody?: TemplateRef<any>;
    abpFooter?: TemplateRef<any>;
    abpSubmit?: ButtonComponent;
    readonly visibleChange: EventEmitter<boolean>;
    readonly init: EventEmitter<void>;
    readonly appear: EventEmitter<void>;
    readonly disappear: EventEmitter<void>;
    _visible: boolean;
    _busy: boolean;
    modalRef: NgbModalRef;
    isConfirmationOpen: boolean;
    destroy$: Subject<void>;
    modalIdentifier: string;
    private toggle$;
    get modalWindowRef(): Element;
    get isFormDirty(): boolean;
    constructor(confirmationService: ConfirmationService, subscription: SubscriptionService, suppressUnsavedChangesWarningToken: boolean, modal: NgbModal, modalRefService: ModalRefService);
    ngOnInit(): void;
    dismiss(mode: ModalDismissMode): void;
    private initToggleStream;
    private toggle;
    ngOnDestroy(): void;
    close(): void;
    listen(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ModalComponent, [null, null, { optional: true; }, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ModalComponent, "abp-modal", never, { "visible": "visible"; "busy": "busy"; "options": "options"; "suppressUnsavedChangesWarning": "suppressUnsavedChangesWarning"; }, { "visibleChange": "visibleChange"; "init": "init"; "appear": "appear"; "disappear": "disappear"; }, ["abpHeader", "abpBody", "abpFooter", "abpSubmit"], ["*"]>;
}
