import { ComponentFactoryResolver, ComponentRef, ElementRef, Injector, OnDestroy, OnInit, Renderer2, ViewContainerRef } from '@angular/core';
import { Subscription } from 'rxjs';
import { LoadingComponent } from '../components/loading/loading.component';
import * as i0 from "@angular/core";
export declare class LoadingDirective implements OnInit, OnDestroy {
    private elRef;
    private vcRef;
    private cdRes;
    private injector;
    private renderer;
    private _loading;
    position: string;
    get loading(): boolean;
    set loading(newValue: boolean);
    targetElement: HTMLElement | undefined;
    delay: number;
    componentRef: ComponentRef<LoadingComponent>;
    rootNode: HTMLDivElement | null;
    timerSubscription: Subscription | null;
    constructor(elRef: ElementRef<HTMLElement>, vcRef: ViewContainerRef, cdRes: ComponentFactoryResolver, injector: Injector, renderer: Renderer2);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LoadingDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LoadingDirective, "[abpLoading]", never, { "loading": "abpLoading"; "targetElement": "abpLoadingTargetElement"; "delay": "abpLoadingDelay"; }, {}, never>;
}
