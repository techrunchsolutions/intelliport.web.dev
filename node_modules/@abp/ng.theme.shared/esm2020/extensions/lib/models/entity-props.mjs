import { escapeHtmlChars } from '@abp/ng.core';
import { of } from 'rxjs';
import { Prop, PropList, Props, PropsFactory, } from './props';
export class EntityPropList extends PropList {
}
export class EntityProps extends Props {
    constructor() {
        super(...arguments);
        this._ctor = EntityPropList;
    }
}
export class EntityPropsFactory extends PropsFactory {
    constructor() {
        super(...arguments);
        this._ctor = EntityProps;
    }
}
export class EntityProp extends Prop {
    constructor(options) {
        super(options.type, options.name, options.displayName, options.permission, options.visible, options.isExtra);
        this.columnWidth = options.columnWidth;
        this.sortable = options.sortable || false;
        this.valueResolver =
            options.valueResolver || (data => of(escapeHtmlChars(data.record[this.name])));
        this.action = options.action;
        this.component = options.component;
        this.enumList = options.enumList;
    }
    static create(options) {
        return new EntityProp(options);
    }
    static createMany(arrayOfOptions) {
        return arrayOfOptions.map(EntityProp.create);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LXByb3BzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUtc2hhcmVkL2V4dGVuc2lvbnMvc3JjL2xpYi9tb2RlbHMvZW50aXR5LXByb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBTyxlQUFlLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFcEQsT0FBTyxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUd0QyxPQUFPLEVBQ0wsSUFBSSxFQUlKLFFBQVEsRUFDUixLQUFLLEVBQ0wsWUFBWSxHQUNiLE1BQU0sU0FBUyxDQUFDO0FBRWpCLE1BQU0sT0FBTyxjQUF3QixTQUFRLFFBQTBCO0NBQUc7QUFFMUUsTUFBTSxPQUFPLFdBQXFCLFNBQVEsS0FBd0I7SUFBbEU7O1FBQ1ksVUFBSyxHQUE0QixjQUFjLENBQUM7SUFDNUQsQ0FBQztDQUFBO0FBRUQsTUFBTSxPQUFPLGtCQUE0QixTQUFRLFlBQTRCO0lBQTdFOztRQUNZLFVBQUssR0FBeUIsV0FBVyxDQUFDO0lBQ3RELENBQUM7Q0FBQTtBQUVELE1BQU0sT0FBTyxVQUFvQixTQUFRLElBQU87SUFROUMsWUFBWSxPQUE2QjtRQUN2QyxLQUFLLENBQ0gsT0FBTyxDQUFDLElBQUksRUFDWixPQUFPLENBQUMsSUFBSSxFQUNaLE9BQU8sQ0FBQyxXQUFXLEVBQ25CLE9BQU8sQ0FBQyxVQUFVLEVBQ2xCLE9BQU8sQ0FBQyxPQUFPLEVBQ2YsT0FBTyxDQUFDLE9BQU8sQ0FDaEIsQ0FBQztRQUVGLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQztRQUN2QyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLElBQUksS0FBSyxDQUFDO1FBQzFDLElBQUksQ0FBQyxhQUFhO1lBQ2hCLE9BQU8sQ0FBQyxhQUFhLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakYsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzdCLElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUNuQyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDbkMsQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUFNLENBQVUsT0FBNkI7UUFDbEQsT0FBTyxJQUFJLFVBQVUsQ0FBSSxPQUFPLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBVSxjQUFzQztRQUMvRCxPQUFPLGNBQWMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9DLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFCUCwgZXNjYXBlSHRtbENoYXJzIH0gZnJvbSAnQGFicC9uZy5jb3JlJztcclxuaW1wb3J0IHsgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBPIH0gZnJvbSAndHMtdG9vbGJlbHQnO1xyXG5pbXBvcnQgeyBBY3Rpb25DYWxsYmFjayB9IGZyb20gJy4vYWN0aW9ucyc7XHJcbmltcG9ydCB7XHJcbiAgUHJvcCxcclxuICBQcm9wQ2FsbGJhY2ssXHJcbiAgUHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2ssXHJcbiAgUHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2tzLFxyXG4gIFByb3BMaXN0LFxyXG4gIFByb3BzLFxyXG4gIFByb3BzRmFjdG9yeSxcclxufSBmcm9tICcuL3Byb3BzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBFbnRpdHlQcm9wTGlzdDxSID0gYW55PiBleHRlbmRzIFByb3BMaXN0PFIsIEVudGl0eVByb3A8Uj4+IHt9XHJcblxyXG5leHBvcnQgY2xhc3MgRW50aXR5UHJvcHM8UiA9IGFueT4gZXh0ZW5kcyBQcm9wczxFbnRpdHlQcm9wTGlzdDxSPj4ge1xyXG4gIHByb3RlY3RlZCBfY3RvcjogVHlwZTxFbnRpdHlQcm9wTGlzdDxSPj4gPSBFbnRpdHlQcm9wTGlzdDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEVudGl0eVByb3BzRmFjdG9yeTxSID0gYW55PiBleHRlbmRzIFByb3BzRmFjdG9yeTxFbnRpdHlQcm9wczxSPj4ge1xyXG4gIHByb3RlY3RlZCBfY3RvcjogVHlwZTxFbnRpdHlQcm9wczxSPj4gPSBFbnRpdHlQcm9wcztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEVudGl0eVByb3A8UiA9IGFueT4gZXh0ZW5kcyBQcm9wPFI+IHtcclxuICByZWFkb25seSBjb2x1bW5XaWR0aDogbnVtYmVyIHwgdW5kZWZpbmVkO1xyXG4gIHJlYWRvbmx5IHNvcnRhYmxlOiBib29sZWFuO1xyXG4gIHJlYWRvbmx5IHZhbHVlUmVzb2x2ZXI6IFByb3BDYWxsYmFjazxSLCBPYnNlcnZhYmxlPGFueT4+O1xyXG4gIHJlYWRvbmx5IGFjdGlvbjogQWN0aW9uQ2FsbGJhY2s8Uj47XHJcbiAgcmVhZG9ubHkgY29tcG9uZW50OiBUeXBlPGFueT47XHJcbiAgcmVhZG9ubHkgZW51bUxpc3Q6IEFycmF5PEFCUC5PcHRpb248YW55Pj47XHJcblxyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnM6IEVudGl0eVByb3BPcHRpb25zPFI+KSB7XHJcbiAgICBzdXBlcihcclxuICAgICAgb3B0aW9ucy50eXBlLFxyXG4gICAgICBvcHRpb25zLm5hbWUsXHJcbiAgICAgIG9wdGlvbnMuZGlzcGxheU5hbWUsXHJcbiAgICAgIG9wdGlvbnMucGVybWlzc2lvbixcclxuICAgICAgb3B0aW9ucy52aXNpYmxlLFxyXG4gICAgICBvcHRpb25zLmlzRXh0cmEsXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuY29sdW1uV2lkdGggPSBvcHRpb25zLmNvbHVtbldpZHRoO1xyXG4gICAgdGhpcy5zb3J0YWJsZSA9IG9wdGlvbnMuc29ydGFibGUgfHwgZmFsc2U7XHJcbiAgICB0aGlzLnZhbHVlUmVzb2x2ZXIgPVxyXG4gICAgICBvcHRpb25zLnZhbHVlUmVzb2x2ZXIgfHwgKGRhdGEgPT4gb2YoZXNjYXBlSHRtbENoYXJzKGRhdGEucmVjb3JkW3RoaXMubmFtZV0pKSk7XHJcbiAgICB0aGlzLmFjdGlvbiA9IG9wdGlvbnMuYWN0aW9uO1xyXG4gICAgdGhpcy5jb21wb25lbnQgPSBvcHRpb25zLmNvbXBvbmVudDtcclxuICAgIHRoaXMuZW51bUxpc3QgPSBvcHRpb25zLmVudW1MaXN0O1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGNyZWF0ZTxSID0gYW55PihvcHRpb25zOiBFbnRpdHlQcm9wT3B0aW9uczxSPikge1xyXG4gICAgcmV0dXJuIG5ldyBFbnRpdHlQcm9wPFI+KG9wdGlvbnMpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGNyZWF0ZU1hbnk8UiA9IGFueT4oYXJyYXlPZk9wdGlvbnM6IEVudGl0eVByb3BPcHRpb25zPFI+W10pIHtcclxuICAgIHJldHVybiBhcnJheU9mT3B0aW9ucy5tYXAoRW50aXR5UHJvcC5jcmVhdGUpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHR5cGUgRW50aXR5UHJvcE9wdGlvbnM8UiA9IGFueT4gPSBPLk9wdGlvbmFsPFxyXG4gIE8uV3JpdGFibGU8RW50aXR5UHJvcDxSPj4sXHJcbiAgfCAncGVybWlzc2lvbidcclxuICB8ICd2aXNpYmxlJ1xyXG4gIHwgJ2Rpc3BsYXlOYW1lJ1xyXG4gIHwgJ2lzRXh0cmEnXHJcbiAgfCAnY29sdW1uV2lkdGgnXHJcbiAgfCAnc29ydGFibGUnXHJcbiAgfCAndmFsdWVSZXNvbHZlcidcclxuICB8ICdhY3Rpb24nXHJcbiAgfCAnY29tcG9uZW50J1xyXG4gIHwgJ2VudW1MaXN0J1xyXG4+O1xyXG5cclxuZXhwb3J0IHR5cGUgRW50aXR5UHJvcERlZmF1bHRzPFIgPSBhbnk+ID0gUmVjb3JkPHN0cmluZywgRW50aXR5UHJvcDxSPltdPjtcclxuZXhwb3J0IHR5cGUgRW50aXR5UHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2s8UiA9IGFueT4gPSBQcm9wQ29udHJpYnV0b3JDYWxsYmFjazxFbnRpdHlQcm9wTGlzdDxSPj47XHJcbmV4cG9ydCB0eXBlIEVudGl0eVByb3BDb250cmlidXRvckNhbGxiYWNrczxSID0gYW55PiA9IFByb3BDb250cmlidXRvckNhbGxiYWNrczxFbnRpdHlQcm9wTGlzdDxSPj47XHJcbiJdfQ==