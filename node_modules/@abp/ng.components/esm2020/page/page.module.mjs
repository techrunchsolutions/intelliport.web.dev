import { CoreModule } from '@abp/ng.core';
import { ThemeSharedModule } from '@abp/ng.theme.shared';
import { UiExtensionsModule } from '@abp/ng.theme.shared/extensions';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { PagePartDirective } from './page-part.directive';
import { PageBreadcrumbContainerComponent, PageTitleContainerComponent, PageToolbarContainerComponent, } from './page-parts.component';
import { PageComponent } from './page.component';
import * as i0 from "@angular/core";
const exportedDeclarations = [
    PageComponent,
    PageTitleContainerComponent,
    PageBreadcrumbContainerComponent,
    PageToolbarContainerComponent,
    PagePartDirective,
];
export class PageModule {
}
PageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: PageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: PageModule, declarations: [PageComponent,
        PageTitleContainerComponent,
        PageBreadcrumbContainerComponent,
        PageToolbarContainerComponent,
        PagePartDirective], imports: [CommonModule, UiExtensionsModule, CoreModule, ThemeSharedModule], exports: [PageComponent,
        PageTitleContainerComponent,
        PageBreadcrumbContainerComponent,
        PageToolbarContainerComponent,
        PagePartDirective, UiExtensionsModule] });
PageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: PageModule, imports: [[CommonModule, UiExtensionsModule, CoreModule, ThemeSharedModule], UiExtensionsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: PageModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...exportedDeclarations],
                    imports: [CommonModule, UiExtensionsModule, CoreModule, ThemeSharedModule],
                    exports: [...exportedDeclarations, UiExtensionsModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21wb25lbnRzL3BhZ2Uvc3JjL3BhZ2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDMUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDckUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUNMLGdDQUFnQyxFQUNoQywyQkFBMkIsRUFDM0IsNkJBQTZCLEdBQzlCLE1BQU0sd0JBQXdCLENBQUM7QUFDaEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQUVqRCxNQUFNLG9CQUFvQixHQUFHO0lBQzNCLGFBQWE7SUFDYiwyQkFBMkI7SUFDM0IsZ0NBQWdDO0lBQ2hDLDZCQUE2QjtJQUM3QixpQkFBaUI7Q0FDbEIsQ0FBQztBQU9GLE1BQU0sT0FBTyxVQUFVOzt1R0FBVixVQUFVO3dHQUFWLFVBQVUsaUJBWnJCLGFBQWE7UUFDYiwyQkFBMkI7UUFDM0IsZ0NBQWdDO1FBQ2hDLDZCQUE2QjtRQUM3QixpQkFBaUIsYUFLUCxZQUFZLEVBQUUsa0JBQWtCLEVBQUUsVUFBVSxFQUFFLGlCQUFpQixhQVR6RSxhQUFhO1FBQ2IsMkJBQTJCO1FBQzNCLGdDQUFnQztRQUNoQyw2QkFBNkI7UUFDN0IsaUJBQWlCLEVBTWtCLGtCQUFrQjt3R0FFMUMsVUFBVSxZQUhaLENBQUMsWUFBWSxFQUFFLGtCQUFrQixFQUFFLFVBQVUsRUFBRSxpQkFBaUIsQ0FBQyxFQUN2QyxrQkFBa0I7MkZBRTFDLFVBQVU7a0JBTHRCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsR0FBRyxvQkFBb0IsQ0FBQztvQkFDdkMsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGtCQUFrQixFQUFFLFVBQVUsRUFBRSxpQkFBaUIsQ0FBQztvQkFDMUUsT0FBTyxFQUFFLENBQUMsR0FBRyxvQkFBb0IsRUFBRSxrQkFBa0IsQ0FBQztpQkFDdkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3JlTW9kdWxlIH0gZnJvbSAnQGFicC9uZy5jb3JlJztcclxuaW1wb3J0IHsgVGhlbWVTaGFyZWRNb2R1bGUgfSBmcm9tICdAYWJwL25nLnRoZW1lLnNoYXJlZCc7XHJcbmltcG9ydCB7IFVpRXh0ZW5zaW9uc01vZHVsZSB9IGZyb20gJ0BhYnAvbmcudGhlbWUuc2hhcmVkL2V4dGVuc2lvbnMnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQYWdlUGFydERpcmVjdGl2ZSB9IGZyb20gJy4vcGFnZS1wYXJ0LmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7XHJcbiAgUGFnZUJyZWFkY3J1bWJDb250YWluZXJDb21wb25lbnQsXHJcbiAgUGFnZVRpdGxlQ29udGFpbmVyQ29tcG9uZW50LFxyXG4gIFBhZ2VUb29sYmFyQ29udGFpbmVyQ29tcG9uZW50LFxyXG59IGZyb20gJy4vcGFnZS1wYXJ0cy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQYWdlQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlLmNvbXBvbmVudCc7XHJcblxyXG5jb25zdCBleHBvcnRlZERlY2xhcmF0aW9ucyA9IFtcclxuICBQYWdlQ29tcG9uZW50LFxyXG4gIFBhZ2VUaXRsZUNvbnRhaW5lckNvbXBvbmVudCxcclxuICBQYWdlQnJlYWRjcnVtYkNvbnRhaW5lckNvbXBvbmVudCxcclxuICBQYWdlVG9vbGJhckNvbnRhaW5lckNvbXBvbmVudCxcclxuICBQYWdlUGFydERpcmVjdGl2ZSxcclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbLi4uZXhwb3J0ZWREZWNsYXJhdGlvbnNdLFxyXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFVpRXh0ZW5zaW9uc01vZHVsZSwgQ29yZU1vZHVsZSwgVGhlbWVTaGFyZWRNb2R1bGVdLFxyXG4gIGV4cG9ydHM6IFsuLi5leHBvcnRlZERlY2xhcmF0aW9ucywgVWlFeHRlbnNpb25zTW9kdWxlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFBhZ2VNb2R1bGUge31cclxuIl19