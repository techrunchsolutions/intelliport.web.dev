import { ConfigStateService } from '@abp/ng.core';
import { ExtensionsService, getObjectExtensionEntitiesFromStore, mapEntitiesToContributors, mergeWithDefaultActions, mergeWithDefaultProps, } from '@abp/ng.theme.shared/extensions';
import { Injectable, Injector } from '@angular/core';
import { map, mapTo, tap } from 'rxjs/operators';
import { DEFAULT_IDENTITY_CREATE_FORM_PROPS, DEFAULT_IDENTITY_EDIT_FORM_PROPS, DEFAULT_IDENTITY_ENTITY_ACTIONS, DEFAULT_IDENTITY_ENTITY_PROPS, DEFAULT_IDENTITY_TOOLBAR_ACTIONS, IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS, IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS, IDENTITY_ENTITY_ACTION_CONTRIBUTORS, IDENTITY_ENTITY_PROP_CONTRIBUTORS, IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS, } from '../tokens/extensions.token';
import * as i0 from "@angular/core";
export class IdentityExtensionsGuard {
    constructor(injector) {
        this.injector = injector;
    }
    canActivate() {
        const extensions = this.injector.get(ExtensionsService);
        const actionContributors = this.injector.get(IDENTITY_ENTITY_ACTION_CONTRIBUTORS, null) || {};
        const toolbarContributors = this.injector.get(IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS, null) || {};
        const propContributors = this.injector.get(IDENTITY_ENTITY_PROP_CONTRIBUTORS, null) || {};
        const createFormContributors = this.injector.get(IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS, null) || {};
        const editFormContributors = this.injector.get(IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS, null) || {};
        const configState = this.injector.get(ConfigStateService);
        return getObjectExtensionEntitiesFromStore(configState, 'Identity').pipe(map(entities => ({
            ["Identity.RolesComponent" /* Roles */]: entities.Role,
            ["Identity.UsersComponent" /* Users */]: entities.User,
        })), mapEntitiesToContributors(configState, 'AbpIdentity'), tap(objectExtensionContributors => {
            mergeWithDefaultActions(extensions.entityActions, DEFAULT_IDENTITY_ENTITY_ACTIONS, actionContributors);
            mergeWithDefaultActions(extensions.toolbarActions, DEFAULT_IDENTITY_TOOLBAR_ACTIONS, toolbarContributors);
            mergeWithDefaultProps(extensions.entityProps, DEFAULT_IDENTITY_ENTITY_PROPS, objectExtensionContributors.prop, propContributors);
            mergeWithDefaultProps(extensions.createFormProps, DEFAULT_IDENTITY_CREATE_FORM_PROPS, objectExtensionContributors.createForm, createFormContributors);
            mergeWithDefaultProps(extensions.editFormProps, DEFAULT_IDENTITY_EDIT_FORM_PROPS, objectExtensionContributors.editForm, editFormContributors);
        }), mapTo(true));
    }
}
IdentityExtensionsGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: IdentityExtensionsGuard, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });
IdentityExtensionsGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: IdentityExtensionsGuard });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: IdentityExtensionsGuard, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5zaW9ucy5ndWFyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2lkZW50aXR5L3NyYy9saWIvZ3VhcmRzL2V4dGVuc2lvbnMuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ2xELE9BQU8sRUFDTCxpQkFBaUIsRUFDakIsbUNBQW1DLEVBQ25DLHlCQUF5QixFQUN6Qix1QkFBdUIsRUFDdkIscUJBQXFCLEdBQ3RCLE1BQU0saUNBQWlDLENBQUM7QUFDekMsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHckQsT0FBTyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFTakQsT0FBTyxFQUNMLGtDQUFrQyxFQUNsQyxnQ0FBZ0MsRUFDaEMsK0JBQStCLEVBQy9CLDZCQUE2QixFQUM3QixnQ0FBZ0MsRUFDaEMsc0NBQXNDLEVBQ3RDLG9DQUFvQyxFQUNwQyxtQ0FBbUMsRUFDbkMsaUNBQWlDLEVBQ2pDLG9DQUFvQyxHQUNyQyxNQUFNLDRCQUE0QixDQUFDOztBQUdwQyxNQUFNLE9BQU8sdUJBQXVCO0lBQ2xDLFlBQW9CLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7SUFBRyxDQUFDO0lBRTFDLFdBQVc7UUFDVCxNQUFNLFVBQVUsR0FBc0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUMzRSxNQUFNLGtCQUFrQixHQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxtQ0FBbUMsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDckUsTUFBTSxtQkFBbUIsR0FDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsb0NBQW9DLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3RFLE1BQU0sZ0JBQWdCLEdBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGlDQUFpQyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNuRSxNQUFNLHNCQUFzQixHQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxzQ0FBc0MsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDeEUsTUFBTSxvQkFBb0IsR0FDeEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsb0NBQW9DLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRXRFLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDMUQsT0FBTyxtQ0FBbUMsQ0FBQyxXQUFXLEVBQUUsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUN0RSxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ2YsdUNBQTJCLEVBQUUsUUFBUSxDQUFDLElBQUk7WUFDMUMsdUNBQTJCLEVBQUUsUUFBUSxDQUFDLElBQUk7U0FDM0MsQ0FBQyxDQUFDLEVBQ0gseUJBQXlCLENBQUMsV0FBVyxFQUFFLGFBQWEsQ0FBQyxFQUNyRCxHQUFHLENBQUMsMkJBQTJCLENBQUMsRUFBRTtZQUNoQyx1QkFBdUIsQ0FDckIsVUFBVSxDQUFDLGFBQWEsRUFDeEIsK0JBQStCLEVBQy9CLGtCQUFrQixDQUNuQixDQUFDO1lBQ0YsdUJBQXVCLENBQ3JCLFVBQVUsQ0FBQyxjQUFjLEVBQ3pCLGdDQUFnQyxFQUNoQyxtQkFBbUIsQ0FDcEIsQ0FBQztZQUNGLHFCQUFxQixDQUNuQixVQUFVLENBQUMsV0FBVyxFQUN0Qiw2QkFBNkIsRUFDN0IsMkJBQTJCLENBQUMsSUFBSSxFQUNoQyxnQkFBZ0IsQ0FDakIsQ0FBQztZQUNGLHFCQUFxQixDQUNuQixVQUFVLENBQUMsZUFBZSxFQUMxQixrQ0FBa0MsRUFDbEMsMkJBQTJCLENBQUMsVUFBVSxFQUN0QyxzQkFBc0IsQ0FDdkIsQ0FBQztZQUNGLHFCQUFxQixDQUNuQixVQUFVLENBQUMsYUFBYSxFQUN4QixnQ0FBZ0MsRUFDaEMsMkJBQTJCLENBQUMsUUFBUSxFQUNwQyxvQkFBb0IsQ0FDckIsQ0FBQztRQUNKLENBQUMsQ0FBQyxFQUNGLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FDWixDQUFDO0lBQ0osQ0FBQzs7b0hBdkRVLHVCQUF1Qjt3SEFBdkIsdUJBQXVCOzJGQUF2Qix1QkFBdUI7a0JBRG5DLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25maWdTdGF0ZVNlcnZpY2UgfSBmcm9tICdAYWJwL25nLmNvcmUnO1xyXG5pbXBvcnQge1xyXG4gIEV4dGVuc2lvbnNTZXJ2aWNlLFxyXG4gIGdldE9iamVjdEV4dGVuc2lvbkVudGl0aWVzRnJvbVN0b3JlLFxyXG4gIG1hcEVudGl0aWVzVG9Db250cmlidXRvcnMsXHJcbiAgbWVyZ2VXaXRoRGVmYXVsdEFjdGlvbnMsXHJcbiAgbWVyZ2VXaXRoRGVmYXVsdFByb3BzLFxyXG59IGZyb20gJ0BhYnAvbmcudGhlbWUuc2hhcmVkL2V4dGVuc2lvbnMnO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDYW5BY3RpdmF0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgbWFwLCBtYXBUbywgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBlSWRlbnRpdHlDb21wb25lbnRzIH0gZnJvbSAnLi4vZW51bXMvY29tcG9uZW50cyc7XHJcbmltcG9ydCB7XHJcbiAgSWRlbnRpdHlDcmVhdGVGb3JtUHJvcENvbnRyaWJ1dG9ycyxcclxuICBJZGVudGl0eUVkaXRGb3JtUHJvcENvbnRyaWJ1dG9ycyxcclxuICBJZGVudGl0eUVudGl0eUFjdGlvbkNvbnRyaWJ1dG9ycyxcclxuICBJZGVudGl0eUVudGl0eVByb3BDb250cmlidXRvcnMsXHJcbiAgSWRlbnRpdHlUb29sYmFyQWN0aW9uQ29udHJpYnV0b3JzLFxyXG59IGZyb20gJy4uL21vZGVscy9jb25maWctb3B0aW9ucyc7XHJcbmltcG9ydCB7XHJcbiAgREVGQVVMVF9JREVOVElUWV9DUkVBVEVfRk9STV9QUk9QUyxcclxuICBERUZBVUxUX0lERU5USVRZX0VESVRfRk9STV9QUk9QUyxcclxuICBERUZBVUxUX0lERU5USVRZX0VOVElUWV9BQ1RJT05TLFxyXG4gIERFRkFVTFRfSURFTlRJVFlfRU5USVRZX1BST1BTLFxyXG4gIERFRkFVTFRfSURFTlRJVFlfVE9PTEJBUl9BQ1RJT05TLFxyXG4gIElERU5USVRZX0NSRUFURV9GT1JNX1BST1BfQ09OVFJJQlVUT1JTLFxyXG4gIElERU5USVRZX0VESVRfRk9STV9QUk9QX0NPTlRSSUJVVE9SUyxcclxuICBJREVOVElUWV9FTlRJVFlfQUNUSU9OX0NPTlRSSUJVVE9SUyxcclxuICBJREVOVElUWV9FTlRJVFlfUFJPUF9DT05UUklCVVRPUlMsXHJcbiAgSURFTlRJVFlfVE9PTEJBUl9BQ1RJT05fQ09OVFJJQlVUT1JTLFxyXG59IGZyb20gJy4uL3Rva2Vucy9leHRlbnNpb25zLnRva2VuJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIElkZW50aXR5RXh0ZW5zaW9uc0d1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7fVxyXG5cclxuICBjYW5BY3RpdmF0ZSgpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcclxuICAgIGNvbnN0IGV4dGVuc2lvbnM6IEV4dGVuc2lvbnNTZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoRXh0ZW5zaW9uc1NlcnZpY2UpO1xyXG4gICAgY29uc3QgYWN0aW9uQ29udHJpYnV0b3JzOiBJZGVudGl0eUVudGl0eUFjdGlvbkNvbnRyaWJ1dG9ycyA9XHJcbiAgICAgIHRoaXMuaW5qZWN0b3IuZ2V0KElERU5USVRZX0VOVElUWV9BQ1RJT05fQ09OVFJJQlVUT1JTLCBudWxsKSB8fCB7fTtcclxuICAgIGNvbnN0IHRvb2xiYXJDb250cmlidXRvcnM6IElkZW50aXR5VG9vbGJhckFjdGlvbkNvbnRyaWJ1dG9ycyA9XHJcbiAgICAgIHRoaXMuaW5qZWN0b3IuZ2V0KElERU5USVRZX1RPT0xCQVJfQUNUSU9OX0NPTlRSSUJVVE9SUywgbnVsbCkgfHwge307XHJcbiAgICBjb25zdCBwcm9wQ29udHJpYnV0b3JzOiBJZGVudGl0eUVudGl0eVByb3BDb250cmlidXRvcnMgPVxyXG4gICAgICB0aGlzLmluamVjdG9yLmdldChJREVOVElUWV9FTlRJVFlfUFJPUF9DT05UUklCVVRPUlMsIG51bGwpIHx8IHt9O1xyXG4gICAgY29uc3QgY3JlYXRlRm9ybUNvbnRyaWJ1dG9yczogSWRlbnRpdHlDcmVhdGVGb3JtUHJvcENvbnRyaWJ1dG9ycyA9XHJcbiAgICAgIHRoaXMuaW5qZWN0b3IuZ2V0KElERU5USVRZX0NSRUFURV9GT1JNX1BST1BfQ09OVFJJQlVUT1JTLCBudWxsKSB8fCB7fTtcclxuICAgIGNvbnN0IGVkaXRGb3JtQ29udHJpYnV0b3JzOiBJZGVudGl0eUVkaXRGb3JtUHJvcENvbnRyaWJ1dG9ycyA9XHJcbiAgICAgIHRoaXMuaW5qZWN0b3IuZ2V0KElERU5USVRZX0VESVRfRk9STV9QUk9QX0NPTlRSSUJVVE9SUywgbnVsbCkgfHwge307XHJcblxyXG4gICAgY29uc3QgY29uZmlnU3RhdGUgPSB0aGlzLmluamVjdG9yLmdldChDb25maWdTdGF0ZVNlcnZpY2UpO1xyXG4gICAgcmV0dXJuIGdldE9iamVjdEV4dGVuc2lvbkVudGl0aWVzRnJvbVN0b3JlKGNvbmZpZ1N0YXRlLCAnSWRlbnRpdHknKS5waXBlKFxyXG4gICAgICBtYXAoZW50aXRpZXMgPT4gKHtcclxuICAgICAgICBbZUlkZW50aXR5Q29tcG9uZW50cy5Sb2xlc106IGVudGl0aWVzLlJvbGUsXHJcbiAgICAgICAgW2VJZGVudGl0eUNvbXBvbmVudHMuVXNlcnNdOiBlbnRpdGllcy5Vc2VyLFxyXG4gICAgICB9KSksXHJcbiAgICAgIG1hcEVudGl0aWVzVG9Db250cmlidXRvcnMoY29uZmlnU3RhdGUsICdBYnBJZGVudGl0eScpLFxyXG4gICAgICB0YXAob2JqZWN0RXh0ZW5zaW9uQ29udHJpYnV0b3JzID0+IHtcclxuICAgICAgICBtZXJnZVdpdGhEZWZhdWx0QWN0aW9ucyhcclxuICAgICAgICAgIGV4dGVuc2lvbnMuZW50aXR5QWN0aW9ucyxcclxuICAgICAgICAgIERFRkFVTFRfSURFTlRJVFlfRU5USVRZX0FDVElPTlMsXHJcbiAgICAgICAgICBhY3Rpb25Db250cmlidXRvcnMsXHJcbiAgICAgICAgKTtcclxuICAgICAgICBtZXJnZVdpdGhEZWZhdWx0QWN0aW9ucyhcclxuICAgICAgICAgIGV4dGVuc2lvbnMudG9vbGJhckFjdGlvbnMsXHJcbiAgICAgICAgICBERUZBVUxUX0lERU5USVRZX1RPT0xCQVJfQUNUSU9OUyxcclxuICAgICAgICAgIHRvb2xiYXJDb250cmlidXRvcnMsXHJcbiAgICAgICAgKTtcclxuICAgICAgICBtZXJnZVdpdGhEZWZhdWx0UHJvcHMoXHJcbiAgICAgICAgICBleHRlbnNpb25zLmVudGl0eVByb3BzLFxyXG4gICAgICAgICAgREVGQVVMVF9JREVOVElUWV9FTlRJVFlfUFJPUFMsXHJcbiAgICAgICAgICBvYmplY3RFeHRlbnNpb25Db250cmlidXRvcnMucHJvcCxcclxuICAgICAgICAgIHByb3BDb250cmlidXRvcnMsXHJcbiAgICAgICAgKTtcclxuICAgICAgICBtZXJnZVdpdGhEZWZhdWx0UHJvcHMoXHJcbiAgICAgICAgICBleHRlbnNpb25zLmNyZWF0ZUZvcm1Qcm9wcyxcclxuICAgICAgICAgIERFRkFVTFRfSURFTlRJVFlfQ1JFQVRFX0ZPUk1fUFJPUFMsXHJcbiAgICAgICAgICBvYmplY3RFeHRlbnNpb25Db250cmlidXRvcnMuY3JlYXRlRm9ybSxcclxuICAgICAgICAgIGNyZWF0ZUZvcm1Db250cmlidXRvcnMsXHJcbiAgICAgICAgKTtcclxuICAgICAgICBtZXJnZVdpdGhEZWZhdWx0UHJvcHMoXHJcbiAgICAgICAgICBleHRlbnNpb25zLmVkaXRGb3JtUHJvcHMsXHJcbiAgICAgICAgICBERUZBVUxUX0lERU5USVRZX0VESVRfRk9STV9QUk9QUyxcclxuICAgICAgICAgIG9iamVjdEV4dGVuc2lvbkNvbnRyaWJ1dG9ycy5lZGl0Rm9ybSxcclxuICAgICAgICAgIGVkaXRGb3JtQ29udHJpYnV0b3JzLFxyXG4gICAgICAgICk7XHJcbiAgICAgIH0pLFxyXG4gICAgICBtYXBUbyh0cnVlKSxcclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiJdfQ==