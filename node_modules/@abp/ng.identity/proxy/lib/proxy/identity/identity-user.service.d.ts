import type { GetIdentityUsersInput, IdentityRoleDto, IdentityUserCreateDto, IdentityUserDto, IdentityUserUpdateDto, IdentityUserUpdateRolesDto } from './models';
import { RestService } from '@abp/ng.core';
import type { ListResultDto, PagedResultDto } from '@abp/ng.core';
import * as i0 from "@angular/core";
export declare class IdentityUserService {
    private restService;
    apiName: string;
    create: (input: IdentityUserCreateDto) => import("rxjs").Observable<IdentityUserDto>;
    delete: (id: string) => import("rxjs").Observable<void>;
    findByEmail: (email: string) => import("rxjs").Observable<IdentityUserDto>;
    findByUsername: (userName: string) => import("rxjs").Observable<IdentityUserDto>;
    get: (id: string) => import("rxjs").Observable<IdentityUserDto>;
    getAssignableRoles: () => import("rxjs").Observable<ListResultDto<IdentityRoleDto>>;
    getList: (input: GetIdentityUsersInput) => import("rxjs").Observable<PagedResultDto<IdentityUserDto>>;
    getRoles: (id: string) => import("rxjs").Observable<ListResultDto<IdentityRoleDto>>;
    update: (id: string, input: IdentityUserUpdateDto) => import("rxjs").Observable<IdentityUserDto>;
    updateRoles: (id: string, input: IdentityUserUpdateRolesDto) => import("rxjs").Observable<void>;
    constructor(restService: RestService);
    static ɵfac: i0.ɵɵFactoryDeclaration<IdentityUserService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<IdentityUserService>;
}
