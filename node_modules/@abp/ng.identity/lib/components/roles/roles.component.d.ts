import { ListService, PagedAndSortedResultRequestDto, PagedResultDto } from '@abp/ng.core';
import { IdentityRoleDto, IdentityRoleService } from '@abp/ng.identity/proxy';
import { ePermissionManagementComponents } from '@abp/ng.permission-management';
import { ConfirmationService, ToasterService } from '@abp/ng.theme.shared';
import { Injector, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class RolesComponent implements OnInit {
    readonly list: ListService<PagedAndSortedResultRequestDto>;
    protected confirmationService: ConfirmationService;
    private toasterService;
    protected injector: Injector;
    protected service: IdentityRoleService;
    data: PagedResultDto<IdentityRoleDto>;
    form: FormGroup;
    selected: IdentityRoleDto;
    isModalVisible: boolean;
    visiblePermissions: boolean;
    providerKey: string;
    modalBusy: boolean;
    permissionManagementKey: ePermissionManagementComponents;
    onVisiblePermissionChange: (event: any) => void;
    constructor(list: ListService<PagedAndSortedResultRequestDto>, confirmationService: ConfirmationService, toasterService: ToasterService, injector: Injector, service: IdentityRoleService);
    ngOnInit(): void;
    buildForm(): void;
    openModal(): void;
    add(): void;
    edit(id: string): void;
    save(): void;
    delete(id: string, name: string): void;
    private hookToQuery;
    openPermissionsModal(providerKey: string): void;
    sort(data: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RolesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RolesComponent, "abp-roles", never, {}, {}, never, never>;
}
