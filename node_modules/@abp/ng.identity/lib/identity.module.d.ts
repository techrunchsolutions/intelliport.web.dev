import { ModuleWithProviders, NgModuleFactory } from '@angular/core';
import { IdentityConfigOptions } from './models/config-options';
import * as i0 from "@angular/core";
import * as i1 from "./components/roles/roles.component";
import * as i2 from "./components/users/users.component";
import * as i3 from "@abp/ng.core";
import * as i4 from "./identity-routing.module";
import * as i5 from "@ng-bootstrap/ng-bootstrap";
import * as i6 from "@abp/ng.theme.shared";
import * as i7 from "@abp/ng.theme.shared/extensions";
import * as i8 from "@abp/ng.permission-management";
import * as i9 from "@ngx-validate/core";
export declare class IdentityModule {
    static forChild(options?: IdentityConfigOptions): ModuleWithProviders<IdentityModule>;
    static forLazy(options?: IdentityConfigOptions): NgModuleFactory<IdentityModule>;
    static ɵfac: i0.ɵɵFactoryDeclaration<IdentityModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<IdentityModule, [typeof i1.RolesComponent, typeof i2.UsersComponent], [typeof i3.CoreModule, typeof i4.IdentityRoutingModule, typeof i5.NgbNavModule, typeof i6.ThemeSharedModule, typeof i7.UiExtensionsModule, typeof i5.NgbDropdownModule, typeof i8.PermissionManagementModule, typeof i9.NgxValidateCoreModule], [typeof i1.RolesComponent, typeof i2.UsersComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<IdentityModule>;
}
