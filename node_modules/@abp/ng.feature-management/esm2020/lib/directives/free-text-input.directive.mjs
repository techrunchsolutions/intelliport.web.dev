import { Directive, HostBinding, Input } from '@angular/core';
import * as i0 from "@angular/core";
export const INPUT_TYPES = {
    numeric: 'number',
    default: 'text',
};
export class FreeTextInputDirective {
    // eslint-disable-next-line @angular-eslint/no-input-rename
    set feature(val) {
        this._feature = val;
        this.setInputType();
    }
    get feature() {
        return this._feature;
    }
    setInputType() {
        const validatorType = this.feature?.valueType?.validator?.name.toLowerCase();
        this.type = INPUT_TYPES[validatorType] ?? INPUT_TYPES.default;
    }
}
FreeTextInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: FreeTextInputDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
FreeTextInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.6", type: FreeTextInputDirective, selector: "input[abpFeatureManagementFreeText]", inputs: { feature: ["abpFeatureManagementFreeText", "feature"] }, host: { properties: { "type": "this.type" } }, exportAs: ["inputAbpFeatureManagementFreeText"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: FreeTextInputDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'input[abpFeatureManagementFreeText]',
                    exportAs: 'inputAbpFeatureManagementFreeText',
                }]
        }], propDecorators: { feature: [{
                type: Input,
                args: ['abpFeatureManagementFreeText']
            }], type: [{
                type: HostBinding,
                args: ['type']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJlZS10ZXh0LWlucHV0LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2ZlYXR1cmUtbWFuYWdlbWVudC9zcmMvbGliL2RpcmVjdGl2ZXMvZnJlZS10ZXh0LWlucHV0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBVzlELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRztJQUN6QixPQUFPLEVBQUUsUUFBUTtJQUNqQixPQUFPLEVBQUUsTUFBTTtDQUNoQixDQUFDO0FBTUYsTUFBTSxPQUFPLHNCQUFzQjtJQUVqQywyREFBMkQ7SUFDM0QsSUFBMkMsT0FBTyxDQUFDLEdBQWlCO1FBQ2xFLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFJTyxZQUFZO1FBQ2xCLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDN0UsSUFBSSxDQUFDLElBQUksR0FBRyxXQUFXLENBQUMsYUFBYSxDQUFDLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQztJQUNoRSxDQUFDOzttSEFqQlUsc0JBQXNCO3VHQUF0QixzQkFBc0I7MkZBQXRCLHNCQUFzQjtrQkFKbEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUscUNBQXFDO29CQUMvQyxRQUFRLEVBQUUsbUNBQW1DO2lCQUM5Qzs4QkFJNEMsT0FBTztzQkFBakQsS0FBSzt1QkFBQyw4QkFBOEI7Z0JBU2hCLElBQUk7c0JBQXhCLFdBQVc7dUJBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG4vLyBUT0RPOiBpbXByb3ZlIHRoaXMgdHlwZVxyXG5leHBvcnQgaW50ZXJmYWNlIEZyZWVUZXh0VHlwZSB7XHJcbiAgdmFsdWVUeXBlOiB7XHJcbiAgICB2YWxpZGF0b3I6IHtcclxuICAgICAgbmFtZTogc3RyaW5nO1xyXG4gICAgfTtcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgSU5QVVRfVFlQRVMgPSB7XHJcbiAgbnVtZXJpYzogJ251bWJlcicsXHJcbiAgZGVmYXVsdDogJ3RleHQnLFxyXG59O1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdpbnB1dFthYnBGZWF0dXJlTWFuYWdlbWVudEZyZWVUZXh0XScsXHJcbiAgZXhwb3J0QXM6ICdpbnB1dEFicEZlYXR1cmVNYW5hZ2VtZW50RnJlZVRleHQnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRnJlZVRleHRJbnB1dERpcmVjdGl2ZSB7XHJcbiAgX2ZlYXR1cmU6IEZyZWVUZXh0VHlwZTtcclxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L25vLWlucHV0LXJlbmFtZVxyXG4gIEBJbnB1dCgnYWJwRmVhdHVyZU1hbmFnZW1lbnRGcmVlVGV4dCcpIHNldCBmZWF0dXJlKHZhbDogRnJlZVRleHRUeXBlKSB7XHJcbiAgICB0aGlzLl9mZWF0dXJlID0gdmFsO1xyXG4gICAgdGhpcy5zZXRJbnB1dFR5cGUoKTtcclxuICB9XHJcblxyXG4gIGdldCBmZWF0dXJlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2ZlYXR1cmU7XHJcbiAgfVxyXG5cclxuICBASG9zdEJpbmRpbmcoJ3R5cGUnKSB0eXBlOiBzdHJpbmc7XHJcblxyXG4gIHByaXZhdGUgc2V0SW5wdXRUeXBlKCkge1xyXG4gICAgY29uc3QgdmFsaWRhdG9yVHlwZSA9IHRoaXMuZmVhdHVyZT8udmFsdWVUeXBlPy52YWxpZGF0b3I/Lm5hbWUudG9Mb3dlckNhc2UoKTtcclxuICAgIHRoaXMudHlwZSA9IElOUFVUX1RZUEVTW3ZhbGlkYXRvclR5cGVdID8/IElOUFVUX1RZUEVTLmRlZmF1bHQ7XHJcbiAgfVxyXG59XHJcbiJdfQ==