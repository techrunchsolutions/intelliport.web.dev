{"version":3,"file":"abp-ng.feature-management.mjs","sources":["../../../../packages/feature-management/src/lib/directives/free-text-input.directive.ts","../../../../packages/feature-management/src/lib/components/feature-management/feature-management.component.ts","../../../../packages/feature-management/src/lib/components/feature-management/feature-management.component.html","../../../../packages/feature-management/src/lib/feature-management.module.ts","../../../../packages/feature-management/src/abp-ng.feature-management.ts"],"sourcesContent":["import { Directive, HostBinding, Input } from '@angular/core';\r\n\r\n// TODO: improve this type\r\nexport interface FreeTextType {\r\n  valueType: {\r\n    validator: {\r\n      name: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport const INPUT_TYPES = {\r\n  numeric: 'number',\r\n  default: 'text',\r\n};\r\n\r\n@Directive({\r\n  selector: 'input[abpFeatureManagementFreeText]',\r\n  exportAs: 'inputAbpFeatureManagementFreeText',\r\n})\r\nexport class FreeTextInputDirective {\r\n  _feature: FreeTextType;\r\n  // eslint-disable-next-line @angular-eslint/no-input-rename\r\n  @Input('abpFeatureManagementFreeText') set feature(val: FreeTextType) {\r\n    this._feature = val;\r\n    this.setInputType();\r\n  }\r\n\r\n  get feature() {\r\n    return this._feature;\r\n  }\r\n\r\n  @HostBinding('type') type: string;\r\n\r\n  private setInputType() {\r\n    const validatorType = this.feature?.valueType?.validator?.name.toLowerCase();\r\n    this.type = INPUT_TYPES[validatorType] ?? INPUT_TYPES.default;\r\n  }\r\n}\r\n","import { ConfigStateService, TrackByService } from '@abp/ng.core';\r\nimport {\r\n  FeatureDto,\r\n  FeatureGroupDto,\r\n  FeaturesService,\r\n  UpdateFeatureDto,\r\n} from '@abp/ng.feature-management/proxy';\r\nimport { LocaleDirection } from '@abp/ng.theme.shared';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { FeatureManagement } from '../../models/feature-management';\r\n\r\nenum ValueTypes {\r\n  ToggleStringValueType = 'ToggleStringValueType',\r\n  FreeTextStringValueType = 'FreeTextStringValueType',\r\n  SelectionStringValueType = 'SelectionStringValueType',\r\n}\r\n\r\n@Component({\r\n  selector: 'abp-feature-management',\r\n  templateUrl: './feature-management.component.html',\r\n  exportAs: 'abpFeatureManagement',\r\n})\r\nexport class FeatureManagementComponent\r\n  implements\r\n    FeatureManagement.FeatureManagementComponentInputs,\r\n    FeatureManagement.FeatureManagementComponentOutputs\r\n{\r\n  @Input()\r\n  providerKey: string;\r\n\r\n  @Input()\r\n  providerName: string;\r\n\r\n  selectedGroupDisplayName: string;\r\n\r\n  groups: Pick<FeatureGroupDto, 'name' | 'displayName'>[] = [];\r\n\r\n  features: {\r\n    [group: string]: Array<FeatureDto & { style?: { [key: string]: number }; initialValue: any }>;\r\n  };\r\n\r\n  valueTypes = ValueTypes;\r\n\r\n  protected _visible;\r\n\r\n  @Input()\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(value: boolean) {\r\n    if (this._visible === value) return;\r\n\r\n    this._visible = value;\r\n    this.visibleChange.emit(value);\r\n    if (value) this.openModal();\r\n  }\r\n\r\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\r\n\r\n  modalBusy = false;\r\n\r\n  constructor(\r\n    public readonly track: TrackByService,\r\n    protected service: FeaturesService,\r\n    protected configState: ConfigStateService,\r\n  ) {}\r\n\r\n  openModal() {\r\n    if (!this.providerName) {\r\n      throw new Error('providerName is required.');\r\n    }\r\n\r\n    this.getFeatures();\r\n  }\r\n\r\n  getFeatures() {\r\n    this.service.get(this.providerName, this.providerKey).subscribe(res => {\r\n      if (!res.groups?.length) return;\r\n      this.groups = res.groups.map(({ name, displayName }) => ({ name, displayName }));\r\n      this.selectedGroupDisplayName = this.groups[0].displayName;\r\n      this.features = res.groups.reduce(\r\n        (acc, val) => ({\r\n          ...acc,\r\n          [val.name]: mapFeatures(val.features, document.body.dir as LocaleDirection),\r\n        }),\r\n        {},\r\n      );\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.modalBusy) return;\r\n\r\n    const changedFeatures = [] as UpdateFeatureDto[];\r\n\r\n    Object.keys(this.features).forEach(key => {\r\n      this.features[key].forEach(feature => {\r\n        if (feature.value !== feature.initialValue)\r\n          changedFeatures.push({ name: feature.name, value: `${feature.value}` });\r\n      });\r\n    });\r\n\r\n    if (!changedFeatures.length) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n\r\n    this.modalBusy = true;\r\n    this.service\r\n      .update(this.providerName, this.providerKey, { features: changedFeatures })\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.visible = false;\r\n\r\n        if (!this.providerKey) {\r\n          // to refresh host's features\r\n          this.configState.refreshAppState().subscribe();\r\n        }\r\n      });\r\n  }\r\n\r\n  onCheckboxClick(val: boolean, feature: FeatureDto) {\r\n    if (val) {\r\n      this.checkToggleAncestors(feature);\r\n    } else {\r\n      this.uncheckToggleDescendants(feature);\r\n    }\r\n  }\r\n\r\n  private uncheckToggleDescendants(feature: FeatureDto) {\r\n    this.findAllDescendantsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\r\n      this.setFeatureValue(node, false),\r\n    );\r\n  }\r\n\r\n  private checkToggleAncestors(feature: FeatureDto) {\r\n    this.findAllAncestorsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\r\n      this.setFeatureValue(node, true),\r\n    );\r\n  }\r\n\r\n  private findAllAncestorsOfByType(feature: FeatureDto, type: ValueTypes) {\r\n    let parent = this.findParentByType(feature, type);\r\n    const ancestors = [];\r\n    while (parent) {\r\n      ancestors.push(parent);\r\n      parent = this.findParentByType(parent, type);\r\n    }\r\n    return ancestors;\r\n  }\r\n\r\n  private findAllDescendantsOfByType(feature: FeatureDto, type: ValueTypes) {\r\n    const descendants = [];\r\n    const queue = [feature];\r\n\r\n    while (queue.length) {\r\n      const node = queue.pop();\r\n      const newDescendants = this.findChildrenByType(node, type);\r\n      descendants.push(...newDescendants);\r\n      queue.push(...newDescendants);\r\n    }\r\n\r\n    return descendants;\r\n  }\r\n\r\n  private findParentByType(feature: FeatureDto, type: ValueTypes) {\r\n    return this.getCurrentGroup().find(\r\n      f => f.valueType.name === type && f.name === feature.parentName,\r\n    );\r\n  }\r\n\r\n  private findChildrenByType(feature: FeatureDto, type: ValueTypes) {\r\n    return this.getCurrentGroup().filter(\r\n      f => f.valueType.name === type && f.parentName === feature.name,\r\n    );\r\n  }\r\n\r\n  private getCurrentGroup() {\r\n    return this.features[this.selectedGroupDisplayName] ?? [];\r\n  }\r\n\r\n  private setFeatureValue(feature: FeatureDto, val: boolean) {\r\n    feature.value = val as any;\r\n  }\r\n}\r\n\r\nfunction mapFeatures(features: FeatureDto[], dir: LocaleDirection) {\r\n  const margin = `margin-${dir === 'rtl' ? 'right' : 'left'}.px`;\r\n\r\n  return features.map(feature => {\r\n    const value =\r\n      feature.valueType?.name === ValueTypes.ToggleStringValueType\r\n        ? (feature.value || '').toLowerCase() === 'true'\r\n        : feature.value;\r\n\r\n    return {\r\n      ...feature,\r\n      value,\r\n      initialValue: value,\r\n      style: { [margin]: feature.depth * 20 },\r\n    };\r\n  });\r\n}\r\n","<abp-modal *ngIf=\"visible\" [(visible)]=\"visible\" [busy]=\"modalBusy\" [options]=\"{ size: 'lg' }\">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ 'AbpFeatureManagement::Features' | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <ul\r\n          ngbNav\r\n          #nav=\"ngbNav\"\r\n          [(activeId)]=\"selectedGroupDisplayName\"\r\n          class=\"nav-pills\"\r\n          orientation=\"vertical\"\r\n        >\r\n          <li\r\n            *ngFor=\"let group of groups; trackBy: track.by('name')\"\r\n            [ngbNavItem]=\"group.displayName\"\r\n          >\r\n            <a ngbNavLink>{{ group.displayName }}</a>\r\n            <ng-template ngbNavContent>\r\n              <h4>{{ selectedGroupDisplayName }}</h4>\r\n              <hr class=\"mt-2 mb-3\" />\r\n\r\n              <div\r\n                class=\"mt-2\"\r\n                *ngFor=\"let feature of features[group.name]; let i = index; trackBy: track.by('id')\"\r\n                [ngStyle]=\"feature.style\"\r\n                [ngSwitch]=\"feature.valueType?.name\"\r\n                (keyup.enter)=\"save()\"\r\n              >\r\n                <ng-container *ngSwitchCase=\"valueTypes.ToggleStringValueType\">\r\n                  <div class=\"form-check\">\r\n                    <input\r\n                      class=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      [id]=\"feature.name\"\r\n                      [(ngModel)]=\"feature.value\"\r\n                      (ngModelChange)=\"onCheckboxClick($event, feature)\"\r\n                    />\r\n\r\n                    <label class=\"form-check-label\" [htmlFor]=\"feature.name\">{{\r\n                      feature.displayName\r\n                    }}</label>\r\n                    <ng-container\r\n                      *ngTemplateOutlet=\"descTmp; context: { $implicit: feature.description }\"\r\n                    ></ng-container>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngSwitchCase=\"valueTypes.FreeTextStringValueType\">\r\n                  <div class=\"mb-3 form-group\">\r\n                    <label [htmlFor]=\"feature.name\" class=\"form-label\">{{\r\n                      feature.displayName\r\n                    }}</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"text\"\r\n                      [id]=\"feature.name\"\r\n                      [(ngModel)]=\"feature.value\"\r\n                      [abpFeatureManagementFreeText]=\"feature\"\r\n                    />\r\n\r\n                    <ng-container\r\n                      *ngTemplateOutlet=\"descTmp; context: { $implicit: feature.description }\"\r\n                    ></ng-container>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngSwitchCase=\"valueTypes.SelectionStringValueType\">\r\n                  <ng-container *ngIf=\"feature.valueType.itemSource?.items?.length\">\r\n                    <div class=\"mb-3 form-group\">\r\n                      <label [htmlFor]=\"feature.name\" class=\"form-label\">{{\r\n                        feature.displayName\r\n                      }}</label>\r\n                      <select class=\"form-select\" [id]=\"feature.name\" [(ngModel)]=\"feature.value\">\r\n                        <option\r\n                          *ngFor=\"\r\n                            let item of feature.valueType.itemSource?.items;\r\n                            trackBy: track.by('value')\r\n                          \"\r\n                          [ngValue]=\"item.value\"\r\n                        >\r\n                          {{\r\n                            item.displayText?.resourceName + '::' + item.displayText?.name\r\n                              | abpLocalization\r\n                          }}\r\n                        </option>\r\n                      </select>\r\n                      <ng-container\r\n                        *ngTemplateOutlet=\"descTmp; context: { $implicit: feature.description }\"\r\n                      ></ng-container>\r\n                    </div>\r\n                  </ng-container>\r\n                </ng-container>\r\n                <ng-container *ngSwitchDefault>{{ feature.displayName }}</ng-container>\r\n              </div>\r\n            </ng-template>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <ng-template #descTmp let-description>\r\n        <small *ngIf=\"description\" class=\"d-block form-text text-muted\">{{ description }}</small>\r\n      </ng-template>\r\n\r\n      <div class=\"col-md-8\"><div [ngbNavOutlet]=\"nav\"></div></div>\r\n\r\n      <div class=\"mx-3\" *ngIf=\"!groups.length\">\r\n        {{ 'AbpFeatureManagement::NoFeatureFoundMessage' | abpLocalization }}\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button abpClose type=\"button\" class=\"btn btn-secondary\">\r\n      {{ 'AbpFeatureManagement::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button\r\n      *ngIf=\"groups.length\"\r\n      iconClass=\"fa fa-check\"\r\n      [disabled]=\"modalBusy\"\r\n      (click)=\"save()\"\r\n    >\r\n      {{ 'AbpFeatureManagement::Save' | abpLocalization }}\r\n    </abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeatureManagementComponent } from './components/feature-management/feature-management.component';\r\nimport { FreeTextInputDirective } from './directives/free-text-input.directive';\r\n\r\nconst exported = [FeatureManagementComponent, FreeTextInputDirective];\r\n\r\n@NgModule({\r\n  declarations: [...exported],\r\n  imports: [CoreModule, ThemeSharedModule, NgbNavModule],\r\n  exports: [...exported],\r\n})\r\nexport class FeatureManagementModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i7.FreeTextInputDirective"],"mappings":";;;;;;;;;;;;;AAWa,MAAA,WAAW,GAAG;AACzB,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,MAAM;EACf;MAMW,sBAAsB,CAAA;;IAGjC,IAA2C,OAAO,CAAC,GAAiB,EAAA;AAClE,QAAA,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;AAED,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAIO,YAAY,GAAA;AAClB,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7E,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC;KAC/D;;mHAjBU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;uGAAtB,sBAAsB,EAAA,QAAA,EAAA,qCAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,CAAA,8BAAA,EAAA,SAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,WAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA,mCAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAJlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qCAAqC;AAC/C,oBAAA,QAAQ,EAAE,mCAAmC;AAC9C,iBAAA,CAAA;8BAI4C,OAAO,EAAA,CAAA;sBAAjD,KAAK;uBAAC,8BAA8B,CAAA;gBAShB,IAAI,EAAA,CAAA;sBAAxB,WAAW;uBAAC,MAAM,CAAA;;;ACpBrB,IAAK,UAIJ,CAAA;AAJD,CAAA,UAAK,UAAU,EAAA;AACb,IAAA,UAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AAC/C,IAAA,UAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;AACnD,IAAA,UAAA,CAAA,0BAAA,CAAA,GAAA,0BAAqD,CAAA;AACvD,CAAC,EAJI,UAAU,KAAV,UAAU,GAId,EAAA,CAAA,CAAA,CAAA;MAOY,0BAA0B,CAAA;AAwCrC,IAAA,WAAA,CACkB,KAAqB,EAC3B,OAAwB,EACxB,WAA+B,EAAA;QAFzB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAgB;QAC3B,IAAO,CAAA,OAAA,GAAP,OAAO,CAAiB;QACxB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QA9B3C,IAAM,CAAA,MAAA,GAAoD,EAAE,CAAC;QAM7D,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;AAiBL,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAW,CAAC;QAE/D,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;KAMd;AArBJ,IAAA,IACI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,IAAI,OAAO,CAAC,KAAc,EAAA;AACxB,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK;YAAE,OAAO;AAEpC,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,QAAA,IAAI,KAAK;YAAE,IAAI,CAAC,SAAS,EAAE,CAAC;KAC7B;IAYD,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACtB,YAAA,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;AAC9C,SAAA;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,IAAG;AACpE,YAAA,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM;gBAAE,OAAO;YAChC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;AAC3D,YAAA,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAC/B,CAAC,GAAG,EAAE,GAAG,MAAM;AACb,gBAAA,GAAG,GAAG;AACN,gBAAA,CAAC,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAsB,CAAC;aAC5E,CAAC,EACF,EAAE,CACH,CAAC;AACJ,SAAC,CAAC,CAAC;KACJ;IAED,IAAI,GAAA;QACF,IAAI,IAAI,CAAC,SAAS;YAAE,OAAO;QAE3B,MAAM,eAAe,GAAG,EAAwB,CAAC;AAEjD,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,IAAG;YACvC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,IAAG;AACnC,gBAAA,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,YAAY;AACxC,oBAAA,eAAe,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,KAAK,CAAE,CAAA,EAAE,CAAC,CAAC;AAC5E,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;AAC3B,YAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,OAAO;AACT,aAAA,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC;AAC1E,aAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAErB,YAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;;gBAErB,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;AAChD,aAAA;AACH,SAAC,CAAC,CAAC;KACN;IAED,eAAe,CAAC,GAAY,EAAE,OAAmB,EAAA;AAC/C,QAAA,IAAI,GAAG,EAAE;AACP,YAAA,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;AACpC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;AACxC,SAAA;KACF;AAEO,IAAA,wBAAwB,CAAC,OAAmB,EAAA;QAClD,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,UAAU,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,IAAI,IACrF,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAClC,CAAC;KACH;AAEO,IAAA,oBAAoB,CAAC,OAAmB,EAAA;QAC9C,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,UAAU,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,IAAI,IACnF,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CACjC,CAAC;KACH;IAEO,wBAAwB,CAAC,OAAmB,EAAE,IAAgB,EAAA;QACpE,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAClD,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,QAAA,OAAO,MAAM,EAAE;AACb,YAAA,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvB,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC9C,SAAA;AACD,QAAA,OAAO,SAAS,CAAC;KAClB;IAEO,0BAA0B,CAAC,OAAmB,EAAE,IAAgB,EAAA;QACtE,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,QAAA,MAAM,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC;QAExB,OAAO,KAAK,CAAC,MAAM,EAAE;AACnB,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACzB,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC3D,YAAA,WAAW,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;AACpC,YAAA,KAAK,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,OAAO,WAAW,CAAC;KACpB;IAEO,gBAAgB,CAAC,OAAmB,EAAE,IAAgB,EAAA;QAC5D,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAChC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,UAAU,CAChE,CAAC;KACH;IAEO,kBAAkB,CAAC,OAAmB,EAAE,IAAgB,EAAA;QAC9D,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,CAClC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,UAAU,KAAK,OAAO,CAAC,IAAI,CAChE,CAAC;KACH;IAEO,eAAe,GAAA;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;KAC3D;IAEO,eAAe,CAAC,OAAmB,EAAE,GAAY,EAAA;AACvD,QAAA,OAAO,CAAC,KAAK,GAAG,GAAU,CAAC;KAC5B;;uHAlKU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,yOCvBvC,g1KA8HA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,SAAA,EAAA,+BAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,UAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,eAAA,EAAA,aAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,EAAA,OAAA,EAAA,QAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,EAAA,OAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,eAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,uGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,sBAAA,EAAA,QAAA,EAAA,qCAAA,EAAA,MAAA,EAAA,CAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mCAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,CAAA,CAAA;2FDvGa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,wBAAwB,YAExB,sBAAsB,EAAA,QAAA,EAAA,g1KAAA,EAAA,CAAA;oKAQhC,WAAW,EAAA,CAAA;sBADV,KAAK;gBAIN,YAAY,EAAA,CAAA;sBADX,KAAK;gBAgBF,OAAO,EAAA,CAAA;sBADV,KAAK;gBAaa,aAAa,EAAA,CAAA;sBAA/B,MAAM;;AAiIT,SAAS,WAAW,CAAC,QAAsB,EAAE,GAAoB,EAAA;AAC/D,IAAA,MAAM,MAAM,GAAG,CAAU,OAAA,EAAA,GAAG,KAAK,KAAK,GAAG,OAAO,GAAG,MAAM,KAAK,CAAC;AAE/D,IAAA,OAAO,QAAQ,CAAC,GAAG,CAAC,OAAO,IAAG;QAC5B,MAAM,KAAK,GACT,OAAO,CAAC,SAAS,EAAE,IAAI,KAAK,UAAU,CAAC,qBAAqB;AAC1D,cAAE,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,WAAW,EAAE,KAAK,MAAM;AAChD,cAAE,OAAO,CAAC,KAAK,CAAC;QAEpB,OAAO;AACL,YAAA,GAAG,OAAO;YACV,KAAK;AACL,YAAA,YAAY,EAAE,KAAK;YACnB,KAAK,EAAE,EAAE,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,GAAG,EAAE,EAAE;SACxC,CAAC;AACJ,KAAC,CAAC,CAAC;AACL;;AErMA,MAAM,QAAQ,GAAG,CAAC,0BAA0B,EAAE,sBAAsB,CAAC,CAAC;MAOzD,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAPlB,YAAA,EAAA,CAAA,0BAA0B,EAAE,sBAAsB,CAIxD,EAAA,OAAA,EAAA,CAAA,UAAU,EAAE,iBAAiB,EAAE,YAAY,CAJrC,EAAA,OAAA,EAAA,CAAA,0BAA0B,EAAE,sBAAsB,CAAA,EAAA,CAAA,CAAA;AAOvD,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,YAHzB,CAAC,UAAU,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;2FAG3C,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,GAAG,QAAQ,CAAC;AAC3B,oBAAA,OAAO,EAAE,CAAC,UAAU,EAAE,iBAAiB,EAAE,YAAY,CAAC;AACtD,oBAAA,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC;AACvB,iBAAA,CAAA;;;ACbD;;AAEG;;;;"}