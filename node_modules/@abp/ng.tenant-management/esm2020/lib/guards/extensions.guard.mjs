import { ConfigStateService } from '@abp/ng.core';
import { ExtensionsService, getObjectExtensionEntitiesFromStore, mapEntitiesToContributors, mergeWithDefaultActions, mergeWithDefaultProps, } from '@abp/ng.theme.shared/extensions';
import { Injectable, Injector } from '@angular/core';
import { map, mapTo, tap } from 'rxjs/operators';
import { DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS, DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS, DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS, DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS, DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS, TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS, TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS, TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS, TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS, TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS, } from '../tokens/extensions.token';
import * as i0 from "@angular/core";
export class TenantManagementExtensionsGuard {
    constructor(injector) {
        this.injector = injector;
    }
    canActivate() {
        const extensions = this.injector.get(ExtensionsService);
        const actionContributors = this.injector.get(TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS, null) || {};
        const toolbarContributors = this.injector.get(TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS, null) || {};
        const propContributors = this.injector.get(TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS, null) || {};
        const createFormContributors = this.injector.get(TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS, null) || {};
        const editFormContributors = this.injector.get(TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS, null) || {};
        const configState = this.injector.get(ConfigStateService);
        return getObjectExtensionEntitiesFromStore(configState, 'TenantManagement').pipe(map(entities => ({
            ["TenantManagement.TenantsComponent" /* Tenants */]: entities.Tenant,
        })), mapEntitiesToContributors(configState, 'TenantManagement'), tap(objectExtensionContributors => {
            mergeWithDefaultActions(extensions.entityActions, DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS, actionContributors);
            mergeWithDefaultActions(extensions.toolbarActions, DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS, toolbarContributors);
            mergeWithDefaultProps(extensions.entityProps, DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS, objectExtensionContributors.prop, propContributors);
            mergeWithDefaultProps(extensions.createFormProps, DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS, objectExtensionContributors.createForm, createFormContributors);
            mergeWithDefaultProps(extensions.editFormProps, DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS, objectExtensionContributors.editForm, editFormContributors);
        }), mapTo(true));
    }
}
TenantManagementExtensionsGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: TenantManagementExtensionsGuard, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });
TenantManagementExtensionsGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: TenantManagementExtensionsGuard });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: TenantManagementExtensionsGuard, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5zaW9ucy5ndWFyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RlbmFudC1tYW5hZ2VtZW50L3NyYy9saWIvZ3VhcmRzL2V4dGVuc2lvbnMuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ2xELE9BQU8sRUFDTCxpQkFBaUIsRUFDakIsbUNBQW1DLEVBQ25DLHlCQUF5QixFQUN6Qix1QkFBdUIsRUFDdkIscUJBQXFCLEdBQ3RCLE1BQU0saUNBQWlDLENBQUM7QUFDekMsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHckQsT0FBTyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFTakQsT0FBTyxFQUNMLDJDQUEyQyxFQUMzQyx5Q0FBeUMsRUFDekMsd0NBQXdDLEVBQ3hDLHNDQUFzQyxFQUN0Qyx5Q0FBeUMsRUFDekMsK0NBQStDLEVBQy9DLDZDQUE2QyxFQUM3Qyw0Q0FBNEMsRUFDNUMsMENBQTBDLEVBQzFDLDZDQUE2QyxHQUM5QyxNQUFNLDRCQUE0QixDQUFDOztBQUdwQyxNQUFNLE9BQU8sK0JBQStCO0lBQzFDLFlBQW9CLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7SUFBRyxDQUFDO0lBRTFDLFdBQVc7UUFDVCxNQUFNLFVBQVUsR0FBc0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUMzRSxNQUFNLGtCQUFrQixHQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyw0Q0FBNEMsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDOUUsTUFBTSxtQkFBbUIsR0FDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsNkNBQTZDLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQy9FLE1BQU0sZ0JBQWdCLEdBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLDBDQUEwQyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUM1RSxNQUFNLHNCQUFzQixHQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQywrQ0FBK0MsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDakYsTUFBTSxvQkFBb0IsR0FDeEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsNkNBQTZDLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRS9FLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDMUQsT0FBTyxtQ0FBbUMsQ0FBQyxXQUFXLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxJQUFJLENBQzlFLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDZixtREFBcUMsRUFBRSxRQUFRLENBQUMsTUFBTTtTQUN2RCxDQUFDLENBQUMsRUFDSCx5QkFBeUIsQ0FBQyxXQUFXLEVBQUUsa0JBQWtCLENBQUMsRUFDMUQsR0FBRyxDQUFDLDJCQUEyQixDQUFDLEVBQUU7WUFDaEMsdUJBQXVCLENBQ3JCLFVBQVUsQ0FBQyxhQUFhLEVBQ3hCLHdDQUF3QyxFQUN4QyxrQkFBa0IsQ0FDbkIsQ0FBQztZQUNGLHVCQUF1QixDQUNyQixVQUFVLENBQUMsY0FBYyxFQUN6Qix5Q0FBeUMsRUFDekMsbUJBQW1CLENBQ3BCLENBQUM7WUFDRixxQkFBcUIsQ0FDbkIsVUFBVSxDQUFDLFdBQVcsRUFDdEIsc0NBQXNDLEVBQ3RDLDJCQUEyQixDQUFDLElBQUksRUFDaEMsZ0JBQWdCLENBQ2pCLENBQUM7WUFDRixxQkFBcUIsQ0FDbkIsVUFBVSxDQUFDLGVBQWUsRUFDMUIsMkNBQTJDLEVBQzNDLDJCQUEyQixDQUFDLFVBQVUsRUFDdEMsc0JBQXNCLENBQ3ZCLENBQUM7WUFDRixxQkFBcUIsQ0FDbkIsVUFBVSxDQUFDLGFBQWEsRUFDeEIseUNBQXlDLEVBQ3pDLDJCQUEyQixDQUFDLFFBQVEsRUFDcEMsb0JBQW9CLENBQ3JCLENBQUM7UUFDSixDQUFDLENBQUMsRUFDRixLQUFLLENBQUMsSUFBSSxDQUFDLENBQ1osQ0FBQztJQUNKLENBQUM7OzRIQXREVSwrQkFBK0I7Z0lBQS9CLCtCQUErQjsyRkFBL0IsK0JBQStCO2tCQUQzQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uZmlnU3RhdGVTZXJ2aWNlIH0gZnJvbSAnQGFicC9uZy5jb3JlJztcclxuaW1wb3J0IHtcclxuICBFeHRlbnNpb25zU2VydmljZSxcclxuICBnZXRPYmplY3RFeHRlbnNpb25FbnRpdGllc0Zyb21TdG9yZSxcclxuICBtYXBFbnRpdGllc1RvQ29udHJpYnV0b3JzLFxyXG4gIG1lcmdlV2l0aERlZmF1bHRBY3Rpb25zLFxyXG4gIG1lcmdlV2l0aERlZmF1bHRQcm9wcyxcclxufSBmcm9tICdAYWJwL25nLnRoZW1lLnNoYXJlZC9leHRlbnNpb25zJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ2FuQWN0aXZhdGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IG1hcCwgbWFwVG8sIHRhcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHsgZVRlbmFudE1hbmFnZW1lbnRDb21wb25lbnRzIH0gZnJvbSAnLi4vZW51bXMvY29tcG9uZW50cyc7XHJcbmltcG9ydCB7XHJcbiAgVGVuYW50TWFuYWdlbWVudENyZWF0ZUZvcm1Qcm9wQ29udHJpYnV0b3JzLFxyXG4gIFRlbmFudE1hbmFnZW1lbnRFZGl0Rm9ybVByb3BDb250cmlidXRvcnMsXHJcbiAgVGVuYW50TWFuYWdlbWVudEVudGl0eUFjdGlvbkNvbnRyaWJ1dG9ycyxcclxuICBUZW5hbnRNYW5hZ2VtZW50RW50aXR5UHJvcENvbnRyaWJ1dG9ycyxcclxuICBUZW5hbnRNYW5hZ2VtZW50VG9vbGJhckFjdGlvbkNvbnRyaWJ1dG9ycyxcclxufSBmcm9tICcuLi9tb2RlbHMvY29uZmlnLW9wdGlvbnMnO1xyXG5pbXBvcnQge1xyXG4gIERFRkFVTFRfVEVOQU5UX01BTkFHRU1FTlRfQ1JFQVRFX0ZPUk1fUFJPUFMsXHJcbiAgREVGQVVMVF9URU5BTlRfTUFOQUdFTUVOVF9FRElUX0ZPUk1fUFJPUFMsXHJcbiAgREVGQVVMVF9URU5BTlRfTUFOQUdFTUVOVF9FTlRJVFlfQUNUSU9OUyxcclxuICBERUZBVUxUX1RFTkFOVF9NQU5BR0VNRU5UX0VOVElUWV9QUk9QUyxcclxuICBERUZBVUxUX1RFTkFOVF9NQU5BR0VNRU5UX1RPT0xCQVJfQUNUSU9OUyxcclxuICBURU5BTlRfTUFOQUdFTUVOVF9DUkVBVEVfRk9STV9QUk9QX0NPTlRSSUJVVE9SUyxcclxuICBURU5BTlRfTUFOQUdFTUVOVF9FRElUX0ZPUk1fUFJPUF9DT05UUklCVVRPUlMsXHJcbiAgVEVOQU5UX01BTkFHRU1FTlRfRU5USVRZX0FDVElPTl9DT05UUklCVVRPUlMsXHJcbiAgVEVOQU5UX01BTkFHRU1FTlRfRU5USVRZX1BST1BfQ09OVFJJQlVUT1JTLFxyXG4gIFRFTkFOVF9NQU5BR0VNRU5UX1RPT0xCQVJfQUNUSU9OX0NPTlRSSUJVVE9SUyxcclxufSBmcm9tICcuLi90b2tlbnMvZXh0ZW5zaW9ucy50b2tlbic7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBUZW5hbnRNYW5hZ2VtZW50RXh0ZW5zaW9uc0d1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7fVxyXG5cclxuICBjYW5BY3RpdmF0ZSgpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcclxuICAgIGNvbnN0IGV4dGVuc2lvbnM6IEV4dGVuc2lvbnNTZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoRXh0ZW5zaW9uc1NlcnZpY2UpO1xyXG4gICAgY29uc3QgYWN0aW9uQ29udHJpYnV0b3JzOiBUZW5hbnRNYW5hZ2VtZW50RW50aXR5QWN0aW9uQ29udHJpYnV0b3JzID1cclxuICAgICAgdGhpcy5pbmplY3Rvci5nZXQoVEVOQU5UX01BTkFHRU1FTlRfRU5USVRZX0FDVElPTl9DT05UUklCVVRPUlMsIG51bGwpIHx8IHt9O1xyXG4gICAgY29uc3QgdG9vbGJhckNvbnRyaWJ1dG9yczogVGVuYW50TWFuYWdlbWVudFRvb2xiYXJBY3Rpb25Db250cmlidXRvcnMgPVxyXG4gICAgICB0aGlzLmluamVjdG9yLmdldChURU5BTlRfTUFOQUdFTUVOVF9UT09MQkFSX0FDVElPTl9DT05UUklCVVRPUlMsIG51bGwpIHx8IHt9O1xyXG4gICAgY29uc3QgcHJvcENvbnRyaWJ1dG9yczogVGVuYW50TWFuYWdlbWVudEVudGl0eVByb3BDb250cmlidXRvcnMgPVxyXG4gICAgICB0aGlzLmluamVjdG9yLmdldChURU5BTlRfTUFOQUdFTUVOVF9FTlRJVFlfUFJPUF9DT05UUklCVVRPUlMsIG51bGwpIHx8IHt9O1xyXG4gICAgY29uc3QgY3JlYXRlRm9ybUNvbnRyaWJ1dG9yczogVGVuYW50TWFuYWdlbWVudENyZWF0ZUZvcm1Qcm9wQ29udHJpYnV0b3JzID1cclxuICAgICAgdGhpcy5pbmplY3Rvci5nZXQoVEVOQU5UX01BTkFHRU1FTlRfQ1JFQVRFX0ZPUk1fUFJPUF9DT05UUklCVVRPUlMsIG51bGwpIHx8IHt9O1xyXG4gICAgY29uc3QgZWRpdEZvcm1Db250cmlidXRvcnM6IFRlbmFudE1hbmFnZW1lbnRFZGl0Rm9ybVByb3BDb250cmlidXRvcnMgPVxyXG4gICAgICB0aGlzLmluamVjdG9yLmdldChURU5BTlRfTUFOQUdFTUVOVF9FRElUX0ZPUk1fUFJPUF9DT05UUklCVVRPUlMsIG51bGwpIHx8IHt9O1xyXG5cclxuICAgIGNvbnN0IGNvbmZpZ1N0YXRlID0gdGhpcy5pbmplY3Rvci5nZXQoQ29uZmlnU3RhdGVTZXJ2aWNlKTtcclxuICAgIHJldHVybiBnZXRPYmplY3RFeHRlbnNpb25FbnRpdGllc0Zyb21TdG9yZShjb25maWdTdGF0ZSwgJ1RlbmFudE1hbmFnZW1lbnQnKS5waXBlKFxyXG4gICAgICBtYXAoZW50aXRpZXMgPT4gKHtcclxuICAgICAgICBbZVRlbmFudE1hbmFnZW1lbnRDb21wb25lbnRzLlRlbmFudHNdOiBlbnRpdGllcy5UZW5hbnQsXHJcbiAgICAgIH0pKSxcclxuICAgICAgbWFwRW50aXRpZXNUb0NvbnRyaWJ1dG9ycyhjb25maWdTdGF0ZSwgJ1RlbmFudE1hbmFnZW1lbnQnKSxcclxuICAgICAgdGFwKG9iamVjdEV4dGVuc2lvbkNvbnRyaWJ1dG9ycyA9PiB7XHJcbiAgICAgICAgbWVyZ2VXaXRoRGVmYXVsdEFjdGlvbnMoXHJcbiAgICAgICAgICBleHRlbnNpb25zLmVudGl0eUFjdGlvbnMsXHJcbiAgICAgICAgICBERUZBVUxUX1RFTkFOVF9NQU5BR0VNRU5UX0VOVElUWV9BQ1RJT05TLFxyXG4gICAgICAgICAgYWN0aW9uQ29udHJpYnV0b3JzLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgbWVyZ2VXaXRoRGVmYXVsdEFjdGlvbnMoXHJcbiAgICAgICAgICBleHRlbnNpb25zLnRvb2xiYXJBY3Rpb25zLFxyXG4gICAgICAgICAgREVGQVVMVF9URU5BTlRfTUFOQUdFTUVOVF9UT09MQkFSX0FDVElPTlMsXHJcbiAgICAgICAgICB0b29sYmFyQ29udHJpYnV0b3JzLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgbWVyZ2VXaXRoRGVmYXVsdFByb3BzKFxyXG4gICAgICAgICAgZXh0ZW5zaW9ucy5lbnRpdHlQcm9wcyxcclxuICAgICAgICAgIERFRkFVTFRfVEVOQU5UX01BTkFHRU1FTlRfRU5USVRZX1BST1BTLFxyXG4gICAgICAgICAgb2JqZWN0RXh0ZW5zaW9uQ29udHJpYnV0b3JzLnByb3AsXHJcbiAgICAgICAgICBwcm9wQ29udHJpYnV0b3JzLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgbWVyZ2VXaXRoRGVmYXVsdFByb3BzKFxyXG4gICAgICAgICAgZXh0ZW5zaW9ucy5jcmVhdGVGb3JtUHJvcHMsXHJcbiAgICAgICAgICBERUZBVUxUX1RFTkFOVF9NQU5BR0VNRU5UX0NSRUFURV9GT1JNX1BST1BTLFxyXG4gICAgICAgICAgb2JqZWN0RXh0ZW5zaW9uQ29udHJpYnV0b3JzLmNyZWF0ZUZvcm0sXHJcbiAgICAgICAgICBjcmVhdGVGb3JtQ29udHJpYnV0b3JzLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgbWVyZ2VXaXRoRGVmYXVsdFByb3BzKFxyXG4gICAgICAgICAgZXh0ZW5zaW9ucy5lZGl0Rm9ybVByb3BzLFxyXG4gICAgICAgICAgREVGQVVMVF9URU5BTlRfTUFOQUdFTUVOVF9FRElUX0ZPUk1fUFJPUFMsXHJcbiAgICAgICAgICBvYmplY3RFeHRlbnNpb25Db250cmlidXRvcnMuZWRpdEZvcm0sXHJcbiAgICAgICAgICBlZGl0Rm9ybUNvbnRyaWJ1dG9ycyxcclxuICAgICAgICApO1xyXG4gICAgICB9KSxcclxuICAgICAgbWFwVG8odHJ1ZSksXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG4iXX0=