import * as i0 from '@angular/core';
import { Injectable } from '@angular/core';
import * as i1 from '@abp/ng.core';

class TenantService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'AbpTenantManagement';
        this.create = (input) => this.restService.request({
            method: 'POST',
            url: '/api/multi-tenancy/tenants',
            body: input,
        }, { apiName: this.apiName });
        this.delete = (id) => this.restService.request({
            method: 'DELETE',
            url: `/api/multi-tenancy/tenants/${id}`,
        }, { apiName: this.apiName });
        this.deleteDefaultConnectionString = (id) => this.restService.request({
            method: 'DELETE',
            url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,
        }, { apiName: this.apiName });
        this.get = (id) => this.restService.request({
            method: 'GET',
            url: `/api/multi-tenancy/tenants/${id}`,
        }, { apiName: this.apiName });
        this.getDefaultConnectionString = (id) => this.restService.request({
            method: 'GET',
            responseType: 'text',
            url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,
        }, { apiName: this.apiName });
        this.getList = (input) => this.restService.request({
            method: 'GET',
            url: '/api/multi-tenancy/tenants',
            params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },
        }, { apiName: this.apiName });
        this.update = (id, input) => this.restService.request({
            method: 'PUT',
            url: `/api/multi-tenancy/tenants/${id}`,
            body: input,
        }, { apiName: this.apiName });
        this.updateDefaultConnectionString = (id, defaultConnectionString) => this.restService.request({
            method: 'PUT',
            url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,
            params: { defaultConnectionString },
        }, { apiName: this.apiName });
    }
}
TenantService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: TenantService, deps: [{ token: i1.RestService }], target: i0.ɵɵFactoryTarget.Injectable });
TenantService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: TenantService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: TenantService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.RestService }]; } });

/**
 * Generated bundle index. Do not edit.
 */

export { TenantService };
//# sourceMappingURL=abp-ng.tenant-management-proxy.mjs.map
