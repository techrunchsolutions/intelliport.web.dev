{"version":3,"file":"abp-ng.tenant-management-proxy.mjs","sources":["../../../../packages/tenant-management/proxy/src/lib/proxy/tenant.service.ts","../../../../packages/tenant-management/proxy/src/abp-ng.tenant-management-proxy.ts"],"sourcesContent":["import type { GetTenantsInput, TenantCreateDto, TenantDto, TenantUpdateDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { PagedResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TenantService {\r\n  apiName = 'AbpTenantManagement';\r\n\r\n  create = (input: TenantCreateDto) =>\r\n    this.restService.request<any, TenantDto>({\r\n      method: 'POST',\r\n      url: '/api/multi-tenancy/tenants',\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  delete = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/multi-tenancy/tenants/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  deleteDefaultConnectionString = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  get = (id: string) =>\r\n    this.restService.request<any, TenantDto>({\r\n      method: 'GET',\r\n      url: `/api/multi-tenancy/tenants/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getDefaultConnectionString = (id: string) =>\r\n    this.restService.request<any, string>({\r\n      method: 'GET',\r\n      responseType: 'text',\r\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getList = (input: GetTenantsInput) =>\r\n    this.restService.request<any, PagedResultDto<TenantDto>>({\r\n      method: 'GET',\r\n      url: '/api/multi-tenancy/tenants',\r\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  update = (id: string, input: TenantUpdateDto) =>\r\n    this.restService.request<any, TenantDto>({\r\n      method: 'PUT',\r\n      url: `/api/multi-tenancy/tenants/${id}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  updateDefaultConnectionString = (id: string, defaultConnectionString: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\r\n      params: { defaultConnectionString },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}