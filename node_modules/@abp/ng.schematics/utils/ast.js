"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isBooleanStringOrNumberLiteral = exports.getAssignedPropertyFromObjectliteral = exports.findEnvironmentExpression = void 0;
const ts = require("typescript");
const ast_utils_1 = require("./angular/ast-utils");
function findEnvironmentExpression(source) {
    const expressions = ast_utils_1.findNodes(source, ts.isObjectLiteralExpression);
    return expressions.find(expr => expr.getText().includes('production'));
}
exports.findEnvironmentExpression = findEnvironmentExpression;
function getAssignedPropertyFromObjectliteral(expression, variableSelector) {
    const expressions = ast_utils_1.findNodes(expression, isBooleanStringOrNumberLiteral);
    const literal = expressions.find(node => Boolean(variableSelector.reduceRight((acc, key) => { var _a; return ((_a = acc === null || acc === void 0 ? void 0 : acc.name) === null || _a === void 0 ? void 0 : _a.getText()) === key ? acc.parent.parent : undefined; }, node.parent)));
    return literal ? literal.getText() : undefined;
}
exports.getAssignedPropertyFromObjectliteral = getAssignedPropertyFromObjectliteral;
function isBooleanStringOrNumberLiteral(node) {
    return (ts.isStringLiteral(node) ||
        ts.isNumericLiteral(node) ||
        node.kind === ts.SyntaxKind.TrueKeyword ||
        node.kind === ts.SyntaxKind.FalseKeyword);
}
exports.isBooleanStringOrNumberLiteral = isBooleanStringOrNumberLiteral;
//# sourceMappingURL=ast.js.map