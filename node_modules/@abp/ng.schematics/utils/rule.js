"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.overwriteFileIfExists = exports.mergeAndAllowDelete = exports.applyWithOverwrite = void 0;
const schematics_1 = require("@angular-devkit/schematics");
function applyWithOverwrite(source, rules) {
    return (tree, _context) => {
        const rule = schematics_1.mergeWith(schematics_1.apply(source, [...rules, overwriteFileIfExists(tree)]));
        return rule(tree, _context);
    };
}
exports.applyWithOverwrite = applyWithOverwrite;
function mergeAndAllowDelete(host, rule) {
    return async (tree, context) => {
        const nextTree = await schematics_1.callRule(rule, tree, context).toPromise();
        host.merge(nextTree, schematics_1.MergeStrategy.AllowDeleteConflict);
    };
}
exports.mergeAndAllowDelete = mergeAndAllowDelete;
function overwriteFileIfExists(tree) {
    return schematics_1.forEach(fileEntry => {
        if (!tree.exists(fileEntry.path))
            return fileEntry;
        tree.overwrite(fileEntry.path, fileEntry.content);
        return null;
    });
}
exports.overwriteFileIfExists = overwriteFileIfExists;
//# sourceMappingURL=rule.js.map