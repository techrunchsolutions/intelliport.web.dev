"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createImportRefToEnumMapper = exports.getEnumNamesFromImports = exports.isEnumImport = void 0;
const schematics_1 = require("@angular-devkit/schematics");
const common_1 = require("./common");
const namespace_1 = require("./namespace");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const shouldQuote = require('should-quote');
function isEnumImport(path) {
    return path.endsWith('.enum');
}
exports.isEnumImport = isEnumImport;
function getEnumNamesFromImports(serviceImports) {
    return Object.keys(serviceImports)
        .filter(isEnumImport)
        .reduce((acc, path) => {
        serviceImports[path].forEach(_import => acc.push(_import));
        return acc;
    }, []);
}
exports.getEnumNamesFromImports = getEnumNamesFromImports;
function createImportRefToEnumMapper({ solution, types }) {
    return (ref) => {
        const { enumNames, enumValues } = types[ref];
        if (!enumNames || !enumValues)
            throw new schematics_1.SchematicsException(common_1.interpolate("[Type Definition Not Found] There is no type definition for \"{0}\"." /* NoTypeDefinition */, ref));
        const namespace = namespace_1.parseNamespace(solution, ref);
        const members = enumNames.map((key, i) => ({
            key: shouldQuote(key) ? `'${key}'` : key,
            value: enumValues[i],
        }));
        return {
            namespace,
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            name: ref.split('.').pop(),
            members,
        };
    };
}
exports.createImportRefToEnumMapper = createImportRefToEnumMapper;
//# sourceMappingURL=enum.js.map