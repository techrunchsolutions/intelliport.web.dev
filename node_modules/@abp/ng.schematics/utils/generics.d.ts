import { Generic } from '../models';
export declare class GenericsCollector {
    private getTypeIdentifier;
    private _generics;
    get generics(): Generic[];
    apply: (value: string, index: number) => string;
    constructor(getTypeIdentifier?: (type: string) => string);
    private createGeneric;
    private register;
    collect(generics: string[], genericArguments: string[]): void;
    get(index: number): Generic;
    set(index: number, value: Generic): void;
    reset(): void;
}
export declare function generateRefWithPlaceholders(sourceType: string): string;
export declare function extractSimpleGenerics(sourceType: string): {
    identifier: string;
    generics: string[];
};
export declare function extractGenerics(sourceType: string): {
    identifier: string;
    generics: string[];
};
export declare function replacePlaceholdersWithGenerics(type: string, generics: string[], genericsCollector: GenericsCollector): string;
